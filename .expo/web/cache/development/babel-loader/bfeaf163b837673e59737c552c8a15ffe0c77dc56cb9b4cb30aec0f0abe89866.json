{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport color from 'color';\nimport { black, white } from \"../../styles/themes/v2/colors\";\nexport var getCardCoverStyle = function getCardCoverStyle(_ref) {\n  var theme = _ref.theme,\n    index = _ref.index,\n    total = _ref.total,\n    borderRadiusStyles = _ref.borderRadiusStyles;\n  var isV3 = theme.isV3,\n    roundness = theme.roundness;\n  if (Object.keys(borderRadiusStyles).length > 0) {\n    return _objectSpread({\n      borderRadius: 3 * roundness\n    }, borderRadiusStyles);\n  }\n  if (isV3) {\n    return {\n      borderRadius: 3 * roundness\n    };\n  }\n  if (index === 0) {\n    if (total === 1) {\n      return {\n        borderRadius: roundness\n      };\n    }\n    return {\n      borderTopLeftRadius: roundness,\n      borderTopRightRadius: roundness\n    };\n  }\n  if (typeof total === 'number' && index === total - 1) {\n    return {\n      borderBottomLeftRadius: roundness\n    };\n  }\n  return undefined;\n};\nvar getBorderColor = function getBorderColor(_ref2) {\n  var theme = _ref2.theme;\n  if (theme.isV3) {\n    return theme.colors.outline;\n  }\n  if (theme.dark) {\n    return color(white).alpha(0.12).rgb().string();\n  }\n  return color(black).alpha(0.12).rgb().string();\n};\nvar getBackgroundColor = function getBackgroundColor(_ref3) {\n  var theme = _ref3.theme,\n    isMode = _ref3.isMode;\n  if (theme.isV3) {\n    if (isMode('contained')) {\n      return theme.colors.surfaceVariant;\n    }\n    if (isMode('outlined')) {\n      return theme.colors.surface;\n    }\n  }\n  return undefined;\n};\nexport var getCardColors = function getCardColors(_ref4) {\n  var theme = _ref4.theme,\n    mode = _ref4.mode;\n  var isMode = function isMode(modeToCompare) {\n    return mode === modeToCompare;\n  };\n  return {\n    backgroundColor: getBackgroundColor({\n      theme: theme,\n      isMode: isMode\n    }),\n    borderColor: getBorderColor({\n      theme: theme\n    })\n  };\n};","map":{"version":3,"mappings":";;;AAEA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,KAAK,EAAEC,KAAK;AAUrB,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAiB,CAAGC,MAU3B;EAAA,IATJC,KAAK,GASND,KATCC,KAAK;IACLC,KAAK,GAQNF,KARCE,KAAK;IACLC,KAAK,GAONH,KAPCG,KAAK;IACLC,qBAMDJ,KANCI;EAOA,IAAQC,IAAI,GAAgBJ,KAAK,CAAzBI,IAAI;IAAEC,YAAcL,KAAK,CAAnBK;EAEd,IAAIC,MAAM,CAACC,IAAI,CAACJ,kBAAkB,CAAC,CAACK,MAAM,GAAG,CAAC,EAAE;IAC9C;MACEC,YAAY,EAAE,CAAC,GAAGJ;IAAS,GACxBF;EAEP;EAEA,IAAIC,IAAI,EAAE;IACR,OAAO;MACLK,YAAY,EAAE,CAAC,GAAGJ;IACpB,CAAC;EACH;EAEA,IAAIJ,KAAK,KAAK,CAAC,EAAE;IACf,IAAIC,KAAK,KAAK,CAAC,EAAE;MACf,OAAO;QACLO,YAAY,EAAEJ;MAChB,CAAC;IACH;IAEA,OAAO;MACLK,mBAAmB,EAAEL,SAAS;MAC9BM,oBAAoB,EAAEN;IACxB,CAAC;EACH;EAEA,IAAI,OAAOH,KAAK,KAAK,QAAQ,IAAID,KAAK,KAAKC,KAAK,GAAG,CAAC,EAAE;IACpD,OAAO;MACLU,sBAAsB,EAAEP;IAC1B,CAAC;EACH;EAEA,OAAOQ,SAAS;AAClB,CAAC;AAED,IAAMC,cAAc,GAAG,SAAjBA,cAAc,CAAGC,OAAyC;EAAA,IAAtCf,QAAiCe,MAAjCf;EACxB,IAAIA,KAAK,CAACI,IAAI,EAAE;IACd,OAAOJ,KAAK,CAACgB,MAAM,CAACC,OAAO;EAC7B;EAEA,IAAIjB,KAAK,CAACkB,IAAI,EAAE;IACd,OAAOvB,KAAK,CAACE,KAAK,CAAC,CAACsB,KAAK,CAAC,IAAI,CAAC,CAACC,GAAG,EAAE,CAACC,MAAM,EAAE;EAChD;EACA,OAAO1B,KAAK,CAACC,KAAK,CAAC,CAACuB,KAAK,CAAC,IAAI,CAAC,CAACC,GAAG,EAAE,CAACC,MAAM,EAAE;AAChD,CAAC;AAED,IAAMC,kBAAkB,GAAG,SAArBA,kBAAkB,CAAGC,OAMrB;EAAA,IALJvB,KAAK,GAKNuB,MALCvB,KAAK;IACLwB,SAIDD,MAJCC;EAKA,IAAIxB,KAAK,CAACI,IAAI,EAAE;IACd,IAAIoB,MAAM,CAAC,WAAW,CAAC,EAAE;MACvB,OAAOxB,KAAK,CAACgB,MAAM,CAACS,cAAc;IACpC;IACA,IAAID,MAAM,CAAC,UAAU,CAAC,EAAE;MACtB,OAAOxB,KAAK,CAACgB,MAAM,CAACU,OAAO;IAC7B;EACF;EACA,OAAOb,SAAS;AAClB,CAAC;AAED,OAAO,IAAMc,aAAa,GAAG,SAAhBA,aAAa,CAAGC,OAMvB;EAAA,IALJ5B,KAAK,GAKN4B,MALC5B,KAAK;IACL6B,OAIDD,MAJCC;EAKA,IAAML,MAAM,GAAIM,SAAVN,MAAM,CAAIM,aAAuB,EAAK;IAC1C,OAAOD,IAAI,KAAKC,aAAa;EAC/B,CAAC;EAED,OAAO;IACLC,eAAe,EAAET,kBAAkB,CAAC;MAClCtB,KAAK,EAALA,KAAK;MACLwB;IACF,CAAC,CAAC;IACFQ,WAAW,EAAElB,cAAc,CAAC;MAAEd;IAAM,CAAC;EACvC,CAAC;AACH,CAAC","names":["color","black","white","getCardCoverStyle","_ref","theme","index","total","borderRadiusStyles","isV3","roundness","Object","keys","length","borderRadius","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","undefined","getBorderColor","_ref2","colors","outline","dark","alpha","rgb","string","getBackgroundColor","_ref3","isMode","surfaceVariant","surface","getCardColors","_ref4","mode","modeToCompare","backgroundColor","borderColor"],"sources":["C:\\Users\\devandroid\\Desktop\\Lista-De-Tareas\\node_modules\\react-native-paper\\src\\components\\Card\\utils.tsx"],"sourcesContent":["import type { ViewStyle } from 'react-native';\n\nimport color from 'color';\n\nimport { black, white } from '../../styles/themes/v2/colors';\nimport type { InternalTheme } from '../../types';\n\ntype CardMode = 'elevated' | 'outlined' | 'contained';\n\ntype BorderRadiusStyles = Pick<\n  ViewStyle,\n  Extract<keyof ViewStyle, `border${string}Radius`>\n>;\n\nexport const getCardCoverStyle = ({\n  theme,\n  index,\n  total,\n  borderRadiusStyles,\n}: {\n  theme: InternalTheme;\n  borderRadiusStyles: BorderRadiusStyles;\n  index?: number;\n  total?: number;\n}) => {\n  const { isV3, roundness } = theme;\n\n  if (Object.keys(borderRadiusStyles).length > 0) {\n    return {\n      borderRadius: 3 * roundness,\n      ...borderRadiusStyles,\n    };\n  }\n\n  if (isV3) {\n    return {\n      borderRadius: 3 * roundness,\n    };\n  }\n\n  if (index === 0) {\n    if (total === 1) {\n      return {\n        borderRadius: roundness,\n      };\n    }\n\n    return {\n      borderTopLeftRadius: roundness,\n      borderTopRightRadius: roundness,\n    };\n  }\n\n  if (typeof total === 'number' && index === total - 1) {\n    return {\n      borderBottomLeftRadius: roundness,\n    };\n  }\n\n  return undefined;\n};\n\nconst getBorderColor = ({ theme }: { theme: InternalTheme }) => {\n  if (theme.isV3) {\n    return theme.colors.outline;\n  }\n\n  if (theme.dark) {\n    return color(white).alpha(0.12).rgb().string();\n  }\n  return color(black).alpha(0.12).rgb().string();\n};\n\nconst getBackgroundColor = ({\n  theme,\n  isMode,\n}: {\n  theme: InternalTheme;\n  isMode: (mode: CardMode) => boolean;\n}) => {\n  if (theme.isV3) {\n    if (isMode('contained')) {\n      return theme.colors.surfaceVariant;\n    }\n    if (isMode('outlined')) {\n      return theme.colors.surface;\n    }\n  }\n  return undefined;\n};\n\nexport const getCardColors = ({\n  theme,\n  mode,\n}: {\n  theme: InternalTheme;\n  mode: CardMode;\n}) => {\n  const isMode = (modeToCompare: CardMode) => {\n    return mode === modeToCompare;\n  };\n\n  return {\n    backgroundColor: getBackgroundColor({\n      theme,\n      isMode,\n    }),\n    borderColor: getBorderColor({ theme }),\n  };\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}