{"ast":null,"code":"function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useInternalTheme } from \"../../core/theming\";\nvar CardActions = function CardActions(props) {\n  var _useInternalTheme = useInternalTheme(props.theme),\n    isV3 = _useInternalTheme.isV3;\n  var justifyContent = isV3 ? 'flex-end' : 'flex-start';\n  return React.createElement(View, _extends({}, props, {\n    style: [styles.container, props.style, {\n      justifyContent: justifyContent\n    }]\n  }), React.Children.map(props.children, function (child, i) {\n    return React.isValidElement(child) ? React.cloneElement(child, {\n      compact: !isV3 && child.props.compact !== false,\n      mode: child.props.mode || isV3 && (i === 0 ? 'outlined' : 'contained'),\n      style: [isV3 && styles.button, child.props.style]\n    }) : child;\n  }));\n};\nCardActions.displayName = 'Card.Actions';\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 8\n  },\n  button: {\n    marginLeft: 8\n  }\n});\nexport default CardActions;","map":{"version":3,"mappings":";;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAA;AAAA;AAK9B,SAASC,gBAAgB;AA+BzB,IAAMC,WAAW,GAAIC,SAAfD,WAAW,CAAIC,KAAY,EAAK;EACpC,wBAAiBF,gBAAgB,CAACE,KAAK,CAACC,KAAK,CAAC;IAAtCC;EACR,IAAMC,cAAc,GAAGD,IAAI,GAAG,UAAU,GAAG,YAAY;EAEvD,OACEL,oBAACO,IAAI,eACCJ,KAAK;IACTK,KAAK,EAAE,CAACC,MAAM,CAACC,SAAS,EAAEP,KAAK,CAACK,KAAK,EAAE;MAAEF;IAAe,CAAC;EAAE,IAE1DN,KAAK,CAACW,QAAQ,CAACC,GAAG,CAACT,KAAK,CAACU,QAAQ,EAAE,UAACC,KAAK,EAAEC,CAAC,EAAK;IAChD,OAAOf,KAAK,CAACgB,cAAc,CAACF,KAAK,CAAC,GAC9Bd,KAAK,CAACiB,YAAY,CAACH,KAAK,EAA6B;MACnDI,OAAO,EAAE,CAACb,IAAI,IAAIS,KAAK,CAACX,KAAK,CAACe,OAAO,KAAK,KAAK;MAC/CC,IAAI,EACFL,KAAK,CAACX,KAAK,CAACgB,IAAI,IACfd,IAAI,KAAKU,CAAC,KAAK,CAAC,GAAG,UAAU,GAAG,WAAW,CAAE;MAChDP,KAAK,EAAE,CAACH,IAAI,IAAII,MAAM,CAACW,MAAM,EAAEN,KAAK,CAACX,KAAK,CAACK,KAAK;IAClD,CAAC,CAAC,GACFM,KAAK;EACX,CAAC,CAAC,CACG;AAEX,CAAC;AAEDZ,WAAW,CAACmB,WAAW,GAAG,cAAc;AAExC,IAAMZ,MAAM,GAAGa,UAAU,CAACC,MAAM,CAAC;EAC/Bb,SAAS,EAAE;IACTc,aAAa,EAAE,KAAK;IACpBC,UAAU,EAAE,QAAQ;IACpBC,OAAO,EAAE;EACX,CAAC;EACDN,MAAM,EAAE;IACNO,UAAU,EAAE;EACd;AACF,CAAC,CAAC;AAEF,eAAezB,WAAW","names":["React","useInternalTheme","CardActions","props","theme","isV3","justifyContent","View","style","styles","container","Children","map","children","child","i","isValidElement","cloneElement","compact","mode","button","displayName","StyleSheet","create","flexDirection","alignItems","padding","marginLeft"],"sources":["C:\\Users\\devandroid\\Desktop\\Lista-De-Tareas\\node_modules\\react-native-paper\\src\\components\\Card\\CardActions.tsx"],"sourcesContent":["import * as React from 'react';\nimport { StyleProp, StyleSheet, View, ViewStyle } from 'react-native';\n\nimport type { ThemeProp } from 'src/types';\n\nimport { useInternalTheme } from '../../core/theming';\n\nexport type Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Items inside the `CardActions`.\n   */\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n  theme?: ThemeProp;\n};\n\n/**\n * A component to show a list of actions inside a Card.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Card, Button } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Card>\n *     <Card.Actions>\n *       <Button>Cancel</Button>\n *       <Button>Ok</Button>\n *     </Card.Actions>\n *   </Card>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst CardActions = (props: Props) => {\n  const { isV3 } = useInternalTheme(props.theme);\n  const justifyContent = isV3 ? 'flex-end' : 'flex-start';\n\n  return (\n    <View\n      {...props}\n      style={[styles.container, props.style, { justifyContent }]}\n    >\n      {React.Children.map(props.children, (child, i) => {\n        return React.isValidElement(child)\n          ? React.cloneElement(child as React.ReactElement<any>, {\n              compact: !isV3 && child.props.compact !== false,\n              mode:\n                child.props.mode ||\n                (isV3 && (i === 0 ? 'outlined' : 'contained')),\n              style: [isV3 && styles.button, child.props.style],\n            })\n          : child;\n      })}\n    </View>\n  );\n};\n\nCardActions.displayName = 'Card.Actions';\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 8,\n  },\n  button: {\n    marginLeft: 8,\n  },\n});\n\nexport default CardActions;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}