{"ast":null,"code":"function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useInternalTheme } from \"../../core/theming\";\nvar DialogActions = function DialogActions(props) {\n  var _useInternalTheme = useInternalTheme(props.theme),\n    isV3 = _useInternalTheme.isV3;\n  var actionsLength = React.Children.toArray(props.children).length;\n  return React.createElement(View, _extends({}, props, {\n    style: [isV3 ? styles.v3Container : styles.container, props.style]\n  }), React.Children.map(props.children, function (child, i) {\n    return React.isValidElement(child) ? React.cloneElement(child, {\n      compact: true,\n      uppercase: !isV3,\n      style: [isV3 && {\n        marginRight: i + 1 === actionsLength ? 0 : 8\n      }, child.props.style]\n    }) : child;\n  }));\n};\nDialogActions.displayName = 'Dialog.Actions';\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: 8\n  },\n  v3Container: {\n    flexDirection: 'row',\n    flexGrow: 1,\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    paddingBottom: 24,\n    paddingHorizontal: 24\n  }\n});\nexport default DialogActions;","map":{"version":3,"mappings":";;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAA;AAAA;AAK9B,SAASC,gBAAgB;AA0CzB,IAAMC,aAAa,GAAIC,SAAjBD,aAAa,CAAIC,KAAY,EAAK;EACtC,wBAAiBF,gBAAgB,CAACE,KAAK,CAACC,KAAK,CAAC;IAAtCC;EACR,IAAMC,aAAa,GAAGN,KAAK,CAACO,QAAQ,CAACC,OAAO,CAACL,KAAK,CAACM,QAAQ,CAAC,CAACC,MAAM;EAEnE,OACEV,oBAACW,IAAI,eACCR,KAAK;IACTS,KAAK,EAAE,CAACP,IAAI,GAAGQ,MAAM,CAACC,WAAW,GAAGD,MAAM,CAACE,SAAS,EAAEZ,KAAK,CAACS,KAAK;EAAE,IAElEZ,KAAK,CAACO,QAAQ,CAACS,GAAG,CAACb,KAAK,CAACM,QAAQ,EAAE,UAACQ,KAAK,EAAEC,CAAC;IAAA,OAC3ClB,KAAK,CAACmB,cAAc,CAACF,KAAK,CAAC,GACvBjB,KAAK,CAACoB,YAAY,CAACH,KAAK,EAA6B;MACnDI,OAAO,EAAE,IAAI;MACbC,SAAS,EAAE,CAACjB,IAAI;MAChBO,KAAK,EAAE,CACLP,IAAI,IAAI;QACNkB,WAAW,EAAEL,CAAC,GAAG,CAAC,KAAKZ,aAAa,GAAG,CAAC,GAAG;MAC7C,CAAC,EACDW,KAAK,CAACd,KAAK,CAACS,KAAK;IAErB,CAAC,CAAC,GACFK,KAAK;EAAA,EACV,CACI;AAEX,CAAC;AAEDf,aAAa,CAACsB,WAAW,GAAG,gBAAgB;AAE5C,IAAMX,MAAM,GAAGY,UAAU,CAACC,MAAM,CAAC;EAC/BX,SAAS,EAAE;IACTY,aAAa,EAAE,KAAK;IACpBC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE,UAAU;IAC1BC,OAAO,EAAE;EACX,CAAC;EACDhB,WAAW,EAAE;IACXa,aAAa,EAAE,KAAK;IACpBI,QAAQ,EAAE,CAAC;IACXH,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE,UAAU;IAC1BG,aAAa,EAAE,EAAE;IACjBC,iBAAiB,EAAE;EACrB;AACF,CAAC,CAAC;AAEF,eAAe/B,aAAa","names":["React","useInternalTheme","DialogActions","props","theme","isV3","actionsLength","Children","toArray","children","length","View","style","styles","v3Container","container","map","child","i","isValidElement","cloneElement","compact","uppercase","marginRight","displayName","StyleSheet","create","flexDirection","alignItems","justifyContent","padding","flexGrow","paddingBottom","paddingHorizontal"],"sources":["C:\\Users\\devandroid\\Desktop\\Lista-De-Tareas\\node_modules\\react-native-paper\\src\\components\\Dialog\\DialogActions.tsx"],"sourcesContent":["import * as React from 'react';\nimport { StyleProp, StyleSheet, View, ViewStyle } from 'react-native';\n\nimport type { ThemeProp } from 'src/types';\n\nimport { useInternalTheme } from '../../core/theming';\n\nexport type Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Content of the `DialogActions`.\n   */\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n};\n\n/**\n * A component to show a list of actions in a Dialog.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Button, Dialog, Portal } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [visible, setVisible] = React.useState(false);\n *\n *   const hideDialog = () => setVisible(false);\n *\n *   return (\n *     <Portal>\n *       <Dialog visible={visible} onDismiss={hideDialog}>\n *         <Dialog.Actions>\n *           <Button onPress={() => console.log('Cancel')}>Cancel</Button>\n *           <Button onPress={() => console.log('Ok')}>Ok</Button>\n *         </Dialog.Actions>\n *       </Dialog>\n *     </Portal>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst DialogActions = (props: Props) => {\n  const { isV3 } = useInternalTheme(props.theme);\n  const actionsLength = React.Children.toArray(props.children).length;\n\n  return (\n    <View\n      {...props}\n      style={[isV3 ? styles.v3Container : styles.container, props.style]}\n    >\n      {React.Children.map(props.children, (child, i) =>\n        React.isValidElement(child)\n          ? React.cloneElement(child as React.ReactElement<any>, {\n              compact: true,\n              uppercase: !isV3,\n              style: [\n                isV3 && {\n                  marginRight: i + 1 === actionsLength ? 0 : 8,\n                },\n                child.props.style,\n              ],\n            })\n          : child\n      )}\n    </View>\n  );\n};\n\nDialogActions.displayName = 'Dialog.Actions';\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: 8,\n  },\n  v3Container: {\n    flexDirection: 'row',\n    flexGrow: 1,\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    paddingBottom: 24,\n    paddingHorizontal: 24,\n  },\n});\n\nexport default DialogActions;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}