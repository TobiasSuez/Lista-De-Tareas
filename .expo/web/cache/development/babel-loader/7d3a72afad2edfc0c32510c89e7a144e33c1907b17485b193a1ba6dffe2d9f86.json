{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"icon\", \"label\", \"accessibilityLabel\", \"accessibilityState\", \"color\", \"rippleColor\", \"disabled\", \"onPress\", \"onLongPress\", \"delayLongPress\", \"theme\", \"style\", \"visible\", \"uppercase\", \"testID\", \"animateFrom\", \"extended\", \"iconMode\", \"variant\"],\n  _excluded2 = [\"backgroundColor\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport color from 'color';\nimport { useInternalTheme } from \"../../core/theming\";\nimport Icon from \"../Icon\";\nimport Surface from \"../Surface\";\nimport TouchableRipple from \"../TouchableRipple/TouchableRipple\";\nimport AnimatedText from \"../Typography/AnimatedText\";\nimport { getCombinedStyles, getFABColors } from \"./utils\";\nvar SIZE = 56;\nvar SCALE = 0.9;\nvar AnimatedFAB = function AnimatedFAB(_ref) {\n  var icon = _ref.icon,\n    label = _ref.label,\n    _ref$accessibilityLab = _ref.accessibilityLabel,\n    accessibilityLabel = _ref$accessibilityLab === void 0 ? label : _ref$accessibilityLab,\n    accessibilityState = _ref.accessibilityState,\n    customColor = _ref.color,\n    customRippleColor = _ref.rippleColor,\n    disabled = _ref.disabled,\n    onPress = _ref.onPress,\n    onLongPress = _ref.onLongPress,\n    delayLongPress = _ref.delayLongPress,\n    themeOverrides = _ref.theme,\n    style = _ref.style,\n    _ref$visible = _ref.visible,\n    visible = _ref$visible === void 0 ? true : _ref$visible,\n    uppercaseProp = _ref.uppercase,\n    _ref$testID = _ref.testID,\n    testID = _ref$testID === void 0 ? 'animated-fab' : _ref$testID,\n    _ref$animateFrom = _ref.animateFrom,\n    animateFrom = _ref$animateFrom === void 0 ? 'right' : _ref$animateFrom,\n    _ref$extended = _ref.extended,\n    extended = _ref$extended === void 0 ? false : _ref$extended,\n    _ref$iconMode = _ref.iconMode,\n    iconMode = _ref$iconMode === void 0 ? 'dynamic' : _ref$iconMode,\n    _ref$variant = _ref.variant,\n    variant = _ref$variant === void 0 ? 'primary' : _ref$variant,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var theme = useInternalTheme(themeOverrides);\n  var uppercase = uppercaseProp != null ? uppercaseProp : !theme.isV3;\n  var isIOS = Platform.OS === 'ios';\n  var isAnimatedFromRight = animateFrom === 'right';\n  var isIconStatic = iconMode === 'static';\n  var isRTL = I18nManager.isRTL;\n  var _React$useRef = React.useRef(new Animated.Value(visible ? 1 : 0)),\n    visibility = _React$useRef.current;\n  var _React$useRef2 = React.useRef(new Animated.Value(0)),\n    animFAB = _React$useRef2.current;\n  var isV3 = theme.isV3,\n    animation = theme.animation;\n  var scale = animation.scale;\n  var _React$useState = React.useState(0),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    textWidth = _React$useState2[0],\n    setTextWidth = _React$useState2[1];\n  var _React$useState3 = React.useState(0),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    textHeight = _React$useState4[0],\n    setTextHeight = _React$useState4[1];\n  var borderRadius = SIZE / (isV3 ? 3.5 : 2);\n  React.useEffect(function () {\n    if (visible) {\n      Animated.timing(visibility, {\n        toValue: 1,\n        duration: 200 * scale,\n        useNativeDriver: true\n      }).start();\n    } else {\n      Animated.timing(visibility, {\n        toValue: 0,\n        duration: 150 * scale,\n        useNativeDriver: true\n      }).start();\n    }\n  }, [visible, scale, visibility]);\n  var _ref3 = StyleSheet.flatten(style) || {},\n    customBackgroundColor = _ref3.backgroundColor,\n    restStyle = _objectWithoutProperties(_ref3, _excluded2);\n  var _getFABColors = getFABColors({\n      theme: theme,\n      variant: variant,\n      disabled: disabled,\n      customColor: customColor,\n      customBackgroundColor: customBackgroundColor\n    }),\n    backgroundColor = _getFABColors.backgroundColor,\n    foregroundColor = _getFABColors.foregroundColor;\n  var rippleColor = customRippleColor || color(foregroundColor).alpha(0.12).rgb().string();\n  var extendedWidth = textWidth + SIZE + borderRadius;\n  var distance = isAnimatedFromRight ? -textWidth - borderRadius : textWidth + borderRadius;\n  React.useEffect(function () {\n    Animated.timing(animFAB, {\n      toValue: !extended ? 0 : distance,\n      duration: 150 * scale,\n      useNativeDriver: true,\n      easing: Easing.linear\n    }).start();\n  }, [animFAB, scale, distance, extended]);\n  var onTextLayout = function onTextLayout(_ref2) {\n    var nativeEvent = _ref2.nativeEvent;\n    var currentWidth = Math.ceil(nativeEvent.lines[0].width);\n    var currentHeight = Math.ceil(nativeEvent.lines[0].height);\n    if (currentWidth !== textWidth || currentHeight !== textHeight) {\n      setTextHeight(currentHeight);\n      if (isIOS) {\n        return setTextWidth(currentWidth - 12);\n      }\n      setTextWidth(currentWidth);\n    }\n  };\n  var propForDirection = function propForDirection(right) {\n    if (isAnimatedFromRight) {\n      return right;\n    }\n    return right.reverse();\n  };\n  var combinedStyles = getCombinedStyles({\n    isAnimatedFromRight: isAnimatedFromRight,\n    isIconStatic: isIconStatic,\n    distance: distance,\n    animFAB: animFAB\n  });\n  var font = isV3 ? theme.fonts.labelLarge : theme.fonts.medium;\n  var textStyle = _objectSpread({\n    color: foregroundColor\n  }, font);\n  var md2Elevation = disabled || !isIOS ? 0 : 6;\n  var md3Elevation = disabled || !isIOS ? 0 : 3;\n  var shadowStyle = isV3 ? styles.v3Shadow : styles.shadow;\n  var baseStyle = [StyleSheet.absoluteFill, disabled ? styles.disabled : shadowStyle];\n  var newAccessibilityState = _objectSpread(_objectSpread({}, accessibilityState), {}, {\n    disabled: disabled\n  });\n  return React.createElement(Surface, _extends({}, rest, {\n    testID: `${testID}-container`,\n    style: [{\n      opacity: visibility,\n      transform: [{\n        scale: visibility\n      }],\n      borderRadius: borderRadius\n    }, !isV3 && {\n      elevation: md2Elevation\n    }, styles.container, restStyle]\n  }, isV3 && {\n    elevation: md3Elevation\n  }, {\n    theme: theme\n  }), React.createElement(Animated.View, {\n    style: [!isV3 && {\n      transform: [{\n        scaleY: animFAB.interpolate({\n          inputRange: propForDirection([distance, 0]),\n          outputRange: propForDirection([SCALE, 1])\n        })\n      }]\n    }, styles.standard, {\n      borderRadius: borderRadius\n    }]\n  }, React.createElement(View, {\n    style: [StyleSheet.absoluteFill, styles.shadowWrapper]\n  }, React.createElement(Animated.View, {\n    pointerEvents: \"none\",\n    style: [baseStyle, {\n      width: extendedWidth,\n      opacity: animFAB.interpolate({\n        inputRange: propForDirection([distance, 0.9 * distance, 0]),\n        outputRange: propForDirection([1, 0.15, 0])\n      }),\n      borderRadius: borderRadius\n    }],\n    testID: `${testID}-extended-shadow`\n  }), React.createElement(Animated.View, {\n    pointerEvents: \"none\",\n    style: [baseStyle, {\n      opacity: animFAB.interpolate({\n        inputRange: propForDirection([distance, 0.9 * distance, 0]),\n        outputRange: propForDirection([0, 0.85, 1])\n      }),\n      width: SIZE,\n      borderRadius: animFAB.interpolate({\n        inputRange: propForDirection([distance, 0]),\n        outputRange: propForDirection([SIZE / (extendedWidth / SIZE), borderRadius])\n      })\n    }, combinedStyles.absoluteFill],\n    testID: `${testID}-shadow`\n  })), React.createElement(Animated.View, {\n    pointerEvents: \"box-none\",\n    style: [styles.innerWrapper, {\n      borderRadius: borderRadius\n    }]\n  }, React.createElement(Animated.View, {\n    style: [styles.standard, {\n      width: extendedWidth,\n      backgroundColor: backgroundColor,\n      borderRadius: borderRadius\n    }, combinedStyles.innerWrapper]\n  }, React.createElement(TouchableRipple, {\n    borderless: true,\n    onPress: onPress,\n    onLongPress: onLongPress,\n    delayLongPress: delayLongPress,\n    rippleColor: rippleColor,\n    disabled: disabled,\n    accessibilityLabel: accessibilityLabel,\n    accessibilityRole: \"button\",\n    accessibilityState: newAccessibilityState,\n    testID: testID,\n    style: {\n      borderRadius: borderRadius\n    },\n    theme: theme\n  }, React.createElement(View, {\n    style: [styles.standard, {\n      width: extendedWidth,\n      borderRadius: borderRadius\n    }]\n  }))))), React.createElement(Animated.View, {\n    style: [styles.iconWrapper, combinedStyles.iconWrapper],\n    pointerEvents: \"none\"\n  }, React.createElement(Icon, {\n    source: icon,\n    size: 24,\n    color: foregroundColor,\n    theme: theme\n  })), React.createElement(View, {\n    pointerEvents: \"none\"\n  }, React.createElement(AnimatedText, {\n    variant: \"labelLarge\",\n    numberOfLines: 1,\n    onTextLayout: isIOS ? onTextLayout : undefined,\n    ellipsizeMode: 'tail',\n    style: [_defineProperty({}, isAnimatedFromRight || isRTL ? 'right' : 'left', isIconStatic ? textWidth - SIZE + borderRadius / (isV3 ? 1 : 2) : borderRadius), {\n      minWidth: textWidth,\n      top: -SIZE / 2 - textHeight / 2,\n      opacity: animFAB.interpolate({\n        inputRange: propForDirection([distance, 0.7 * distance, 0]),\n        outputRange: propForDirection([1, 0, 0])\n      }),\n      transform: [{\n        translateX: animFAB.interpolate({\n          inputRange: propForDirection([distance, 0]),\n          outputRange: propForDirection([0, SIZE])\n        })\n      }]\n    }, styles.label, uppercase && styles.uppercaseLabel, textStyle],\n    theme: theme,\n    testID: `${testID}-text`\n  }, label)), !isIOS && React.createElement(ScrollView, {\n    style: styles.textPlaceholderContainer\n  }, React.createElement(AnimatedText, {\n    variant: \"labelLarge\",\n    numberOfLines: 1,\n    onTextLayout: onTextLayout,\n    ellipsizeMode: 'tail',\n    style: [styles.label, uppercase && styles.uppercaseLabel, textStyle],\n    theme: theme\n  }, label)));\n};\nvar styles = StyleSheet.create({\n  standard: {\n    height: SIZE\n  },\n  disabled: {\n    elevation: 0\n  },\n  container: {\n    position: 'absolute',\n    backgroundColor: 'transparent'\n  },\n  innerWrapper: {\n    flexDirection: 'row',\n    overflow: 'hidden'\n  },\n  shadowWrapper: {\n    elevation: 0\n  },\n  shadow: {\n    elevation: 6\n  },\n  v3Shadow: {\n    elevation: 3\n  },\n  iconWrapper: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    position: 'absolute',\n    height: SIZE,\n    width: SIZE\n  },\n  label: {\n    position: 'absolute'\n  },\n  uppercaseLabel: {\n    textTransform: 'uppercase'\n  },\n  textPlaceholderContainer: {\n    height: 0,\n    position: 'absolute'\n  }\n});\nexport default AnimatedFAB;","map":{"version":3,"mappings":"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","names":["React","color","useInternalTheme","Icon","Surface","TouchableRipple","AnimatedText","getCombinedStyles","getFABColors","SIZE","SCALE","AnimatedFAB","_ref","icon","label","accessibilityLabel","accessibilityState","customColor","customRippleColor","rippleColor","disabled","onPress","onLongPress","delayLongPress","themeOverrides","theme","style","visible","uppercaseProp","uppercase","testID","animateFrom","extended","iconMode","variant","rest","isV3","isIOS","Platform","OS","isAnimatedFromRight","isIconStatic","isRTL","I18nManager","useRef","Animated","Value","visibility","current","animFAB","animation","scale","useState","textWidth","setTextWidth","textHeight","setTextHeight","borderRadius","useEffect","timing","toValue","duration","useNativeDriver","start","StyleSheet","flatten","customBackgroundColor","backgroundColor","restStyle","foregroundColor","alpha","rgb","string","extendedWidth","distance","easing","Easing","linear","onTextLayout","_ref2","nativeEvent","currentWidth","Math","ceil","lines","width","currentHeight","height","propForDirection","right","reverse","combinedStyles","font","fonts","labelLarge","medium","textStyle","md2Elevation","md3Elevation","shadowStyle","styles","v3Shadow","shadow","baseStyle","absoluteFill","newAccessibilityState","opacity","transform","elevation","container","View","scaleY","interpolate","inputRange","outputRange","standard","shadowWrapper","pointerEvents","innerWrapper","borderless","accessibilityRole","iconWrapper","source","size","numberOfLines","undefined","ellipsizeMode","minWidth","top","translateX","uppercaseLabel","ScrollView","textPlaceholderContainer","create","position","flexDirection","overflow","alignItems","justifyContent","textTransform"],"sources":["C:\\Users\\devandroid\\Desktop\\Lista-De-Tareas\\node_modules\\react-native-paper\\src\\components\\FAB\\AnimatedFAB.tsx"],"sourcesContent":["import * as React from 'react';\nimport type {\n  AccessibilityState,\n  ColorValue,\n  NativeSyntheticEvent,\n  TextLayoutEventData,\n} from 'react-native';\nimport {\n  Animated,\n  Easing,\n  GestureResponderEvent,\n  I18nManager,\n  Platform,\n  ScrollView,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport color from 'color';\n\nimport { useInternalTheme } from '../../core/theming';\nimport type { $Omit, $RemoveChildren, ThemeProp } from '../../types';\nimport type { IconSource } from '../Icon';\nimport Icon from '../Icon';\nimport Surface from '../Surface';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport AnimatedText from '../Typography/AnimatedText';\nimport { getCombinedStyles, getFABColors } from './utils';\n\nexport type AnimatedFABIconMode = 'static' | 'dynamic';\nexport type AnimatedFABAnimateFrom = 'left' | 'right';\n\nexport type Props = $Omit<$RemoveChildren<typeof Surface>, 'mode'> & {\n  /**\n   * Icon to display for the `FAB`.\n   */\n  icon: IconSource;\n  /**\n   * Label for extended `FAB`.\n   */\n  label: string;\n  /**\n   * Make the label text uppercased.\n   */\n  uppercase?: boolean;\n  /**\n   * Accessibility label for the FAB. This is read by the screen reader when the user taps the FAB.\n   * Uses `label` by default if specified.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Accessibility state for the FAB. This is read by the screen reader when the user taps the FAB.\n   */\n  accessibilityState?: AccessibilityState;\n  /**\n   * Custom color for the icon and label of the `FAB`.\n   */\n  color?: string;\n  /**\n   * Color of the ripple effect.\n   */\n  rippleColor?: ColorValue;\n  /**\n   * Whether `FAB` is disabled. A disabled button is greyed out and `onPress` is not called on touch.\n   */\n  disabled?: boolean;\n  /**\n   * Whether `FAB` is currently visible.\n   */\n  visible?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: (e: GestureResponderEvent) => void;\n  /**\n   * Function to execute on long press.\n   */\n  onLongPress?: (e: GestureResponderEvent) => void;\n  /**\n   * The number of milliseconds a user must touch the element before executing `onLongPress`.\n   */\n  delayLongPress?: number;\n  /**\n   * Whether icon should be translated to the end of extended `FAB` or be static and stay in the same place. The default value is `dynamic`.\n   */\n  iconMode?: AnimatedFABIconMode;\n  /**\n   * Indicates from which direction animation should be performed. The default value is `right`.\n   */\n  animateFrom?: AnimatedFABAnimateFrom;\n  /**\n   * Whether `FAB` should start animation to extend.\n   */\n  extended: boolean;\n  /**\n   * @supported Available in v5.x with theme version 3\n   *\n   * Color mappings variant for combinations of container and icon colors.\n   */\n  variant?: 'primary' | 'secondary' | 'tertiary' | 'surface';\n  style?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n  testID?: string;\n};\n\nconst SIZE = 56;\nconst SCALE = 0.9;\n\n/**\n * An animated, extending horizontally floating action button represents the primary action in an application.\n *\n * ## Usage\n * ```js\n * import React from 'react';\n * import {\n *   StyleProp,\n *   ViewStyle,\n *   Animated,\n *   StyleSheet,\n *   Platform,\n *   ScrollView,\n *   Text,\n *   SafeAreaView,\n *   I18nManager,\n * } from 'react-native';\n * import { AnimatedFAB } from 'react-native-paper';\n *\n * const MyComponent = ({\n *   animatedValue,\n *   visible,\n *   extended,\n *   label,\n *   animateFrom,\n *   style,\n *   iconMode,\n * }) => {\n *   const [isExtended, setIsExtended] = React.useState(true);\n *\n *   const isIOS = Platform.OS === 'ios';\n *\n *   const onScroll = ({ nativeEvent }) => {\n *     const currentScrollPosition =\n *       Math.floor(nativeEvent?.contentOffset?.y) ?? 0;\n *\n *     setIsExtended(currentScrollPosition <= 0);\n *   };\n *\n *   const fabStyle = { [animateFrom]: 16 };\n *\n *   return (\n *     <SafeAreaView style={styles.container}>\n *       <ScrollView onScroll={onScroll}>\n *         {[...new Array(100).keys()].map((_, i) => (\n *           <Text>{i}</Text>\n *         ))}\n *       </ScrollView>\n *       <AnimatedFAB\n *         icon={'plus'}\n *         label={'Label'}\n *         extended={isExtended}\n *         onPress={() => console.log('Pressed')}\n *         visible={visible}\n *         animateFrom={'right'}\n *         iconMode={'static'}\n *         style={[styles.fabStyle, style, fabStyle]}\n *       />\n *     </SafeAreaView>\n *   );\n * };\n *\n * export default MyComponent;\n *\n * const styles = StyleSheet.create({\n *   container: {\n *     flexGrow: 1,\n *   },\n *   fabStyle: {\n *     bottom: 16,\n *     right: 16,\n *     position: 'absolute',\n *   },\n * });\n * ```\n */\nconst AnimatedFAB = ({\n  icon,\n  label,\n  accessibilityLabel = label,\n  accessibilityState,\n  color: customColor,\n  rippleColor: customRippleColor,\n  disabled,\n  onPress,\n  onLongPress,\n  delayLongPress,\n  theme: themeOverrides,\n  style,\n  visible = true,\n  uppercase: uppercaseProp,\n  testID = 'animated-fab',\n  animateFrom = 'right',\n  extended = false,\n  iconMode = 'dynamic',\n  variant = 'primary',\n  ...rest\n}: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n  const uppercase: boolean = uppercaseProp ?? !theme.isV3;\n  const isIOS = Platform.OS === 'ios';\n  const isAnimatedFromRight = animateFrom === 'right';\n  const isIconStatic = iconMode === 'static';\n  const { isRTL } = I18nManager;\n  const { current: visibility } = React.useRef<Animated.Value>(\n    new Animated.Value(visible ? 1 : 0)\n  );\n  const { current: animFAB } = React.useRef<Animated.Value>(\n    new Animated.Value(0)\n  );\n  const { isV3, animation } = theme;\n  const { scale } = animation;\n\n  const [textWidth, setTextWidth] = React.useState<number>(0);\n  const [textHeight, setTextHeight] = React.useState<number>(0);\n\n  const borderRadius = SIZE / (isV3 ? 3.5 : 2);\n\n  React.useEffect(() => {\n    if (visible) {\n      Animated.timing(visibility, {\n        toValue: 1,\n        duration: 200 * scale,\n        useNativeDriver: true,\n      }).start();\n    } else {\n      Animated.timing(visibility, {\n        toValue: 0,\n        duration: 150 * scale,\n        useNativeDriver: true,\n      }).start();\n    }\n  }, [visible, scale, visibility]);\n\n  const { backgroundColor: customBackgroundColor, ...restStyle } =\n    (StyleSheet.flatten(style) || {}) as ViewStyle;\n\n  const { backgroundColor, foregroundColor } = getFABColors({\n    theme,\n    variant,\n    disabled,\n    customColor,\n    customBackgroundColor,\n  });\n\n  const rippleColor =\n    customRippleColor || color(foregroundColor).alpha(0.12).rgb().string();\n\n  const extendedWidth = textWidth + SIZE + borderRadius;\n\n  const distance = isAnimatedFromRight\n    ? -textWidth - borderRadius\n    : textWidth + borderRadius;\n\n  React.useEffect(() => {\n    Animated.timing(animFAB, {\n      toValue: !extended ? 0 : distance,\n      duration: 150 * scale,\n      useNativeDriver: true,\n      easing: Easing.linear,\n    }).start();\n  }, [animFAB, scale, distance, extended]);\n\n  const onTextLayout = ({\n    nativeEvent,\n  }: NativeSyntheticEvent<TextLayoutEventData>) => {\n    const currentWidth = Math.ceil(nativeEvent.lines[0].width);\n    const currentHeight = Math.ceil(nativeEvent.lines[0].height);\n\n    if (currentWidth !== textWidth || currentHeight !== textHeight) {\n      setTextHeight(currentHeight);\n\n      if (isIOS) {\n        return setTextWidth(currentWidth - 12);\n      }\n\n      setTextWidth(currentWidth);\n    }\n  };\n\n  const propForDirection = <T,>(right: T[]): T[] => {\n    if (isAnimatedFromRight) {\n      return right;\n    }\n\n    return right.reverse();\n  };\n\n  const combinedStyles = getCombinedStyles({\n    isAnimatedFromRight,\n    isIconStatic,\n    distance,\n    animFAB,\n  });\n\n  const font = isV3 ? theme.fonts.labelLarge : theme.fonts.medium;\n\n  const textStyle = {\n    color: foregroundColor,\n    ...font,\n  };\n\n  const md2Elevation = disabled || !isIOS ? 0 : 6;\n  const md3Elevation = disabled || !isIOS ? 0 : 3;\n\n  const shadowStyle = isV3 ? styles.v3Shadow : styles.shadow;\n  const baseStyle = [\n    StyleSheet.absoluteFill,\n    disabled ? styles.disabled : shadowStyle,\n  ];\n\n  const newAccessibilityState = { ...accessibilityState, disabled };\n\n  return (\n    <Surface\n      {...rest}\n      testID={`${testID}-container`}\n      style={[\n        {\n          opacity: visibility,\n          transform: [\n            {\n              scale: visibility,\n            },\n          ],\n          borderRadius,\n        },\n        !isV3 && {\n          elevation: md2Elevation,\n        },\n        styles.container,\n        restStyle,\n      ]}\n      {...(isV3 && { elevation: md3Elevation })}\n      theme={theme}\n    >\n      <Animated.View\n        style={[\n          !isV3 && {\n            transform: [\n              {\n                scaleY: animFAB.interpolate({\n                  inputRange: propForDirection([distance, 0]),\n                  outputRange: propForDirection([SCALE, 1]),\n                }),\n              },\n            ],\n          },\n          styles.standard,\n          { borderRadius },\n        ]}\n      >\n        <View style={[StyleSheet.absoluteFill, styles.shadowWrapper]}>\n          <Animated.View\n            pointerEvents=\"none\"\n            style={[\n              baseStyle,\n              {\n                width: extendedWidth,\n                opacity: animFAB.interpolate({\n                  inputRange: propForDirection([distance, 0.9 * distance, 0]),\n                  outputRange: propForDirection([1, 0.15, 0]),\n                }),\n                borderRadius,\n              },\n            ]}\n            testID={`${testID}-extended-shadow`}\n          />\n          <Animated.View\n            pointerEvents=\"none\"\n            style={[\n              baseStyle,\n              {\n                opacity: animFAB.interpolate({\n                  inputRange: propForDirection([distance, 0.9 * distance, 0]),\n                  outputRange: propForDirection([0, 0.85, 1]),\n                }),\n                width: SIZE,\n                borderRadius: animFAB.interpolate({\n                  inputRange: propForDirection([distance, 0]),\n                  outputRange: propForDirection([\n                    SIZE / (extendedWidth / SIZE),\n                    borderRadius,\n                  ]),\n                }),\n              },\n              combinedStyles.absoluteFill,\n            ]}\n            testID={`${testID}-shadow`}\n          />\n        </View>\n        <Animated.View\n          pointerEvents=\"box-none\"\n          style={[styles.innerWrapper, { borderRadius }]}\n        >\n          <Animated.View\n            style={[\n              styles.standard,\n              {\n                width: extendedWidth,\n                backgroundColor,\n                borderRadius,\n              },\n              combinedStyles.innerWrapper,\n            ]}\n          >\n            <TouchableRipple\n              borderless\n              onPress={onPress}\n              onLongPress={onLongPress}\n              delayLongPress={delayLongPress}\n              rippleColor={rippleColor}\n              disabled={disabled}\n              accessibilityLabel={accessibilityLabel}\n              accessibilityRole=\"button\"\n              accessibilityState={newAccessibilityState}\n              testID={testID}\n              style={{ borderRadius }}\n              theme={theme}\n            >\n              <View\n                style={[\n                  styles.standard,\n                  {\n                    width: extendedWidth,\n                    borderRadius,\n                  },\n                ]}\n              />\n            </TouchableRipple>\n          </Animated.View>\n        </Animated.View>\n      </Animated.View>\n\n      <Animated.View\n        style={[styles.iconWrapper, combinedStyles.iconWrapper]}\n        pointerEvents=\"none\"\n      >\n        <Icon source={icon} size={24} color={foregroundColor} theme={theme} />\n      </Animated.View>\n\n      <View pointerEvents=\"none\">\n        <AnimatedText\n          variant=\"labelLarge\"\n          numberOfLines={1}\n          onTextLayout={isIOS ? onTextLayout : undefined}\n          ellipsizeMode={'tail'}\n          style={[\n            {\n              [isAnimatedFromRight || isRTL ? 'right' : 'left']: isIconStatic\n                ? textWidth - SIZE + borderRadius / (isV3 ? 1 : 2)\n                : borderRadius,\n            },\n            {\n              minWidth: textWidth,\n              top: -SIZE / 2 - textHeight / 2,\n              opacity: animFAB.interpolate({\n                inputRange: propForDirection([distance, 0.7 * distance, 0]),\n                outputRange: propForDirection([1, 0, 0]),\n              }) as unknown as number,\n              // TODO: check\n              transform: [\n                {\n                  translateX: animFAB.interpolate({\n                    inputRange: propForDirection([distance, 0]),\n                    outputRange: propForDirection([0, SIZE]),\n                  }),\n                },\n              ],\n            },\n            styles.label,\n            uppercase && styles.uppercaseLabel,\n            textStyle,\n          ]}\n          theme={theme}\n          testID={`${testID}-text`}\n        >\n          {label}\n        </AnimatedText>\n      </View>\n\n      {!isIOS && (\n        // Method `onTextLayout` on Android returns sizes of text visible on the screen,\n        // however during render the text in `FAB` isn't fully visible. In order to get\n        // proper text measurements there is a need to additionaly render that text, but\n        // wrapped in absolutely positioned `ScrollView` which height is 0.\n        <ScrollView style={styles.textPlaceholderContainer}>\n          <AnimatedText\n            variant=\"labelLarge\"\n            numberOfLines={1}\n            onTextLayout={onTextLayout}\n            ellipsizeMode={'tail'}\n            style={[\n              styles.label,\n              uppercase && styles.uppercaseLabel,\n              textStyle,\n            ]}\n            theme={theme}\n          >\n            {label}\n          </AnimatedText>\n        </ScrollView>\n      )}\n    </Surface>\n  );\n};\n\nconst styles = StyleSheet.create({\n  standard: {\n    height: SIZE,\n  },\n  disabled: {\n    elevation: 0,\n  },\n  // eslint-disable-next-line react-native/no-color-literals\n  container: {\n    position: 'absolute',\n    backgroundColor: 'transparent',\n  },\n  innerWrapper: {\n    flexDirection: 'row',\n    overflow: 'hidden',\n  },\n  shadowWrapper: {\n    elevation: 0,\n  },\n  shadow: {\n    elevation: 6,\n  },\n  v3Shadow: {\n    elevation: 3,\n  },\n  iconWrapper: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    position: 'absolute',\n    height: SIZE,\n    width: SIZE,\n  },\n  label: {\n    position: 'absolute',\n  },\n  uppercaseLabel: {\n    textTransform: 'uppercase',\n  },\n  textPlaceholderContainer: {\n    height: 0,\n    position: 'absolute',\n  },\n});\n\nexport default AnimatedFAB;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}