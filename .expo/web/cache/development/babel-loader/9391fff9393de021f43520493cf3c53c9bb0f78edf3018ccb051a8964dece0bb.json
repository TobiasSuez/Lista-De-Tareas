{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport BackHandler from \"react-native-web/dist/exports/BackHandler\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport useLatestCallback from 'use-latest-callback';\nimport { useInternalTheme } from \"../core/theming\";\nimport { addEventListener } from \"../utils/addEventListener\";\nimport useAnimatedValue from \"../utils/useAnimatedValue\";\nimport Surface from \"./Surface\";\nvar DEFAULT_DURATION = 220;\nfunction Modal(_ref) {\n  var _theme$colors;\n  var _ref$dismissable = _ref.dismissable,\n    dismissable = _ref$dismissable === void 0 ? true : _ref$dismissable,\n    _ref$dismissableBackB = _ref.dismissableBackButton,\n    dismissableBackButton = _ref$dismissableBackB === void 0 ? dismissable : _ref$dismissableBackB,\n    _ref$visible = _ref.visible,\n    visible = _ref$visible === void 0 ? false : _ref$visible,\n    _ref$overlayAccessibi = _ref.overlayAccessibilityLabel,\n    overlayAccessibilityLabel = _ref$overlayAccessibi === void 0 ? 'Close modal' : _ref$overlayAccessibi,\n    _ref$onDismiss = _ref.onDismiss,\n    onDismiss = _ref$onDismiss === void 0 ? function () {} : _ref$onDismiss,\n    children = _ref.children,\n    contentContainerStyle = _ref.contentContainerStyle,\n    style = _ref.style,\n    themeOverrides = _ref.theme,\n    _ref$testID = _ref.testID,\n    testID = _ref$testID === void 0 ? 'modal' : _ref$testID;\n  var theme = useInternalTheme(themeOverrides);\n  var visibleRef = React.useRef(visible);\n  React.useEffect(function () {\n    visibleRef.current = visible;\n  });\n  var onDismissCallback = useLatestCallback(onDismiss);\n  var scale = theme.animation.scale;\n  var _useSafeAreaInsets = useSafeAreaInsets(),\n    top = _useSafeAreaInsets.top,\n    bottom = _useSafeAreaInsets.bottom;\n  var opacity = useAnimatedValue(visible ? 1 : 0);\n  var _React$useState = React.useState(visible),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    rendered = _React$useState2[0],\n    setRendered = _React$useState2[1];\n  if (visible && !rendered) {\n    setRendered(true);\n  }\n  var showModal = React.useCallback(function () {\n    Animated.timing(opacity, {\n      toValue: 1,\n      duration: scale * DEFAULT_DURATION,\n      easing: Easing.out(Easing.cubic),\n      useNativeDriver: true\n    }).start();\n  }, [opacity, scale]);\n  var hideModal = React.useCallback(function () {\n    Animated.timing(opacity, {\n      toValue: 0,\n      duration: scale * DEFAULT_DURATION,\n      easing: Easing.out(Easing.cubic),\n      useNativeDriver: true\n    }).start(function (_ref2) {\n      var finished = _ref2.finished;\n      if (!finished) {\n        return;\n      }\n      if (visible) {\n        onDismissCallback();\n      }\n      if (visibleRef.current) {\n        showModal();\n      } else {\n        setRendered(false);\n      }\n    });\n  }, [onDismissCallback, opacity, scale, showModal, visible]);\n  React.useEffect(function () {\n    if (!visible) {\n      return undefined;\n    }\n    var onHardwareBackPress = function onHardwareBackPress() {\n      if (dismissable || dismissableBackButton) {\n        hideModal();\n      }\n      return true;\n    };\n    var subscription = addEventListener(BackHandler, 'hardwareBackPress', onHardwareBackPress);\n    return function () {\n      return subscription.remove();\n    };\n  }, [dismissable, dismissableBackButton, hideModal, visible]);\n  var prevVisible = React.useRef(null);\n  React.useEffect(function () {\n    if (prevVisible.current !== visible) {\n      if (visible) {\n        showModal();\n      } else {\n        hideModal();\n      }\n    }\n    prevVisible.current = visible;\n  });\n  if (!rendered) return null;\n  return React.createElement(Animated.View, {\n    pointerEvents: visible ? 'auto' : 'none',\n    accessibilityViewIsModal: true,\n    accessibilityLiveRegion: \"polite\",\n    style: StyleSheet.absoluteFill,\n    onAccessibilityEscape: hideModal,\n    testID: testID\n  }, React.createElement(TouchableWithoutFeedback, {\n    accessibilityLabel: overlayAccessibilityLabel,\n    accessibilityRole: \"button\",\n    disabled: !dismissable,\n    onPress: dismissable ? hideModal : undefined,\n    importantForAccessibility: \"no\"\n  }, React.createElement(Animated.View, {\n    testID: `${testID}-backdrop`,\n    style: [styles.backdrop, {\n      backgroundColor: (_theme$colors = theme.colors) === null || _theme$colors === void 0 ? void 0 : _theme$colors.backdrop,\n      opacity: opacity\n    }]\n  })), React.createElement(View, {\n    style: [styles.wrapper, {\n      marginTop: top,\n      marginBottom: bottom\n    }, style],\n    pointerEvents: \"box-none\",\n    testID: `${testID}-wrapper`\n  }, React.createElement(Surface, {\n    testID: `${testID}-surface`,\n    theme: theme,\n    style: [{\n      opacity: opacity\n    }, styles.content, contentContainerStyle]\n  }, children)));\n}\nexport default Modal;\nvar styles = StyleSheet.create({\n  backdrop: {\n    flex: 1\n  },\n  wrapper: _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n    justifyContent: 'center'\n  }),\n  content: {\n    backgroundColor: 'transparent',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"mappings":"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","names":["React","useSafeAreaInsets","useLatestCallback","useInternalTheme","addEventListener","useAnimatedValue","Surface","DEFAULT_DURATION","Modal","_ref","dismissable","dismissableBackButton","visible","overlayAccessibilityLabel","onDismiss","children","contentContainerStyle","style","themeOverrides","theme","testID","visibleRef","useRef","useEffect","current","onDismissCallback","scale","animation","top","bottom","opacity","useState","rendered","setRendered","showModal","useCallback","Animated","timing","toValue","duration","easing","Easing","out","cubic","useNativeDriver","start","hideModal","finished","_ref2","undefined","onHardwareBackPress","subscription","BackHandler","remove","prevVisible","View","pointerEvents","accessibilityViewIsModal","accessibilityLiveRegion","StyleSheet","absoluteFill","onAccessibilityEscape","TouchableWithoutFeedback","accessibilityLabel","accessibilityRole","disabled","onPress","importantForAccessibility","styles","backdrop","backgroundColor","colors","_theme$colors","wrapper","marginTop","marginBottom","content","create","flex","absoluteFillObject","justifyContent"],"sources":["C:\\Users\\devandroid\\Desktop\\Lista-De-Tareas\\node_modules\\react-native-paper\\src\\components\\Modal.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  BackHandler,\n  Easing,\n  StyleProp,\n  StyleSheet,\n  TouchableWithoutFeedback,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport useLatestCallback from 'use-latest-callback';\n\nimport { useInternalTheme } from '../core/theming';\nimport type { ThemeProp } from '../types';\nimport { addEventListener } from '../utils/addEventListener';\nimport useAnimatedValue from '../utils/useAnimatedValue';\nimport Surface from './Surface';\n\nexport type Props = {\n  /**\n   * Determines whether clicking outside the modal dismiss it.\n   */\n  dismissable?: boolean;\n  /**\n   * Determines whether clicking Android hardware back button dismiss dialog.\n   */\n  dismissableBackButton?: boolean;\n  /**\n   * Callback that is called when the user dismisses the modal.\n   */\n  onDismiss?: () => void;\n  /**\n   * Accessibility label for the overlay. This is read by the screen reader when the user taps outside the modal.\n   */\n  overlayAccessibilityLabel?: string;\n  /**\n   * Determines Whether the modal is visible.\n   */\n  visible: boolean;\n  /**\n   * Content of the `Modal`.\n   */\n  children: React.ReactNode;\n  /**\n   * Style for the content of the modal\n   */\n  contentContainerStyle?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n  /**\n   * Style for the wrapper of the modal.\n   * Use this prop to change the default wrapper style or to override safe area insets with marginTop and marginBottom.\n   */\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n  /**\n   * testID to be used on tests.\n   */\n  testID?: string;\n};\n\nconst DEFAULT_DURATION = 220;\n\n/**\n * The Modal component is a simple way to present content above an enclosing view.\n * To render the `Modal` above other components, you'll need to wrap it with the [`Portal`](./Portal) component.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Modal, Portal, Text, Button, PaperProvider } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [visible, setVisible] = React.useState(false);\n *\n *   const showModal = () => setVisible(true);\n *   const hideModal = () => setVisible(false);\n *   const containerStyle = {backgroundColor: 'white', padding: 20};\n *\n *   return (\n *     <PaperProvider>\n *       <Portal>\n *         <Modal visible={visible} onDismiss={hideModal} contentContainerStyle={containerStyle}>\n *           <Text>Example Modal.  Click outside this area to dismiss.</Text>\n *         </Modal>\n *       </Portal>\n *       <Button style={{marginTop: 30}} onPress={showModal}>\n *         Show\n *       </Button>\n *     </PaperProvider>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nfunction Modal({\n  dismissable = true,\n  dismissableBackButton = dismissable,\n  visible = false,\n  overlayAccessibilityLabel = 'Close modal',\n  onDismiss = () => {},\n  children,\n  contentContainerStyle,\n  style,\n  theme: themeOverrides,\n  testID = 'modal',\n}: Props) {\n  const theme = useInternalTheme(themeOverrides);\n  const visibleRef = React.useRef(visible);\n\n  React.useEffect(() => {\n    visibleRef.current = visible;\n  });\n\n  const onDismissCallback = useLatestCallback(onDismiss);\n\n  const { scale } = theme.animation;\n\n  const { top, bottom } = useSafeAreaInsets();\n\n  const opacity = useAnimatedValue(visible ? 1 : 0);\n\n  const [rendered, setRendered] = React.useState(visible);\n\n  if (visible && !rendered) {\n    setRendered(true);\n  }\n\n  const showModal = React.useCallback(() => {\n    Animated.timing(opacity, {\n      toValue: 1,\n      duration: scale * DEFAULT_DURATION,\n      easing: Easing.out(Easing.cubic),\n      useNativeDriver: true,\n    }).start();\n  }, [opacity, scale]);\n\n  const hideModal = React.useCallback(() => {\n    Animated.timing(opacity, {\n      toValue: 0,\n      duration: scale * DEFAULT_DURATION,\n      easing: Easing.out(Easing.cubic),\n      useNativeDriver: true,\n    }).start(({ finished }) => {\n      if (!finished) {\n        return;\n      }\n\n      if (visible) {\n        onDismissCallback();\n      }\n\n      if (visibleRef.current) {\n        showModal();\n      } else {\n        setRendered(false);\n      }\n    });\n  }, [onDismissCallback, opacity, scale, showModal, visible]);\n\n  React.useEffect(() => {\n    if (!visible) {\n      return undefined;\n    }\n\n    const onHardwareBackPress = () => {\n      if (dismissable || dismissableBackButton) {\n        hideModal();\n      }\n\n      return true;\n    };\n\n    const subscription = addEventListener(\n      BackHandler,\n      'hardwareBackPress',\n      onHardwareBackPress\n    );\n    return () => subscription.remove();\n  }, [dismissable, dismissableBackButton, hideModal, visible]);\n\n  const prevVisible = React.useRef<boolean | null>(null);\n\n  React.useEffect(() => {\n    if (prevVisible.current !== visible) {\n      if (visible) {\n        showModal();\n      } else {\n        hideModal();\n      }\n    }\n    prevVisible.current = visible;\n  });\n\n  if (!rendered) return null;\n\n  return (\n    <Animated.View\n      pointerEvents={visible ? 'auto' : 'none'}\n      accessibilityViewIsModal\n      accessibilityLiveRegion=\"polite\"\n      style={StyleSheet.absoluteFill}\n      onAccessibilityEscape={hideModal}\n      testID={testID}\n    >\n      <TouchableWithoutFeedback\n        accessibilityLabel={overlayAccessibilityLabel}\n        accessibilityRole=\"button\"\n        disabled={!dismissable}\n        onPress={dismissable ? hideModal : undefined}\n        importantForAccessibility=\"no\"\n      >\n        <Animated.View\n          testID={`${testID}-backdrop`}\n          style={[\n            styles.backdrop,\n            {\n              backgroundColor: theme.colors?.backdrop,\n              opacity,\n            },\n          ]}\n        />\n      </TouchableWithoutFeedback>\n      <View\n        style={[\n          styles.wrapper,\n          { marginTop: top, marginBottom: bottom },\n          style,\n        ]}\n        pointerEvents=\"box-none\"\n        testID={`${testID}-wrapper`}\n      >\n        <Surface\n          testID={`${testID}-surface`}\n          theme={theme}\n          style={[{ opacity }, styles.content, contentContainerStyle]}\n        >\n          {children}\n        </Surface>\n      </View>\n    </Animated.View>\n  );\n}\n\nexport default Modal;\n\nconst styles = StyleSheet.create({\n  backdrop: {\n    flex: 1,\n  },\n  wrapper: {\n    ...StyleSheet.absoluteFillObject,\n    justifyContent: 'center',\n  },\n  // eslint-disable-next-line react-native/no-color-literals\n  content: {\n    backgroundColor: 'transparent',\n    justifyContent: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}