{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"visible\", \"action\", \"icon\", \"onIconPress\", \"iconAccessibilityLabel\", \"duration\", \"onDismiss\", \"children\", \"elevation\", \"wrapperStyle\", \"style\", \"theme\", \"rippleColor\", \"testID\"],\n  _excluded2 = [\"style\", \"label\", \"onPress\", \"rippleColor\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport useLatestCallback from 'use-latest-callback';\nimport { useInternalTheme } from \"../core/theming\";\nimport Button from \"./Button/Button\";\nimport IconButton from \"./IconButton/IconButton\";\nimport MaterialCommunityIcon from \"./MaterialCommunityIcon\";\nimport Surface from \"./Surface\";\nimport Text from \"./Typography/Text\";\nvar DURATION_SHORT = 4000;\nvar DURATION_MEDIUM = 7000;\nvar DURATION_LONG = 10000;\nvar Snackbar = function Snackbar(_ref) {\n  var visible = _ref.visible,\n    action = _ref.action,\n    icon = _ref.icon,\n    onIconPress = _ref.onIconPress,\n    _ref$iconAccessibilit = _ref.iconAccessibilityLabel,\n    iconAccessibilityLabel = _ref$iconAccessibilit === void 0 ? 'Close icon' : _ref$iconAccessibilit,\n    _ref$duration = _ref.duration,\n    duration = _ref$duration === void 0 ? DURATION_MEDIUM : _ref$duration,\n    onDismiss = _ref.onDismiss,\n    children = _ref.children,\n    _ref$elevation = _ref.elevation,\n    elevation = _ref$elevation === void 0 ? 2 : _ref$elevation,\n    wrapperStyle = _ref.wrapperStyle,\n    style = _ref.style,\n    themeOverrides = _ref.theme,\n    rippleColor = _ref.rippleColor,\n    testID = _ref.testID,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var theme = useInternalTheme(themeOverrides);\n  var _useSafeAreaInsets = useSafeAreaInsets(),\n    bottom = _useSafeAreaInsets.bottom,\n    right = _useSafeAreaInsets.right,\n    left = _useSafeAreaInsets.left;\n  var _React$useRef = React.useRef(new Animated.Value(0.0)),\n    opacity = _React$useRef.current;\n  var hideTimeout = React.useRef(undefined);\n  var _React$useState = React.useState(!visible),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    hidden = _React$useState2[0],\n    setHidden = _React$useState2[1];\n  var scale = theme.animation.scale;\n  var handleOnVisible = useLatestCallback(function () {\n    if (hideTimeout.current) clearTimeout(hideTimeout.current);\n    setHidden(false);\n    Animated.timing(opacity, {\n      toValue: 1,\n      duration: 200 * scale,\n      easing: Easing.out(Easing.ease),\n      useNativeDriver: true\n    }).start(function (_ref2) {\n      var finished = _ref2.finished;\n      if (finished) {\n        var isInfinity = duration === Number.POSITIVE_INFINITY || duration === Number.NEGATIVE_INFINITY;\n        if (!isInfinity) {\n          hideTimeout.current = setTimeout(onDismiss, duration);\n        }\n      }\n    });\n  });\n  var handleOnHidden = useLatestCallback(function () {\n    if (hideTimeout.current) {\n      clearTimeout(hideTimeout.current);\n    }\n    Animated.timing(opacity, {\n      toValue: 0,\n      duration: 100 * scale,\n      useNativeDriver: true\n    }).start(function (_ref3) {\n      var finished = _ref3.finished;\n      if (finished) {\n        setHidden(true);\n      }\n    });\n  });\n  React.useEffect(function () {\n    return function () {\n      if (hideTimeout.current) clearTimeout(hideTimeout.current);\n    };\n  }, []);\n  React.useLayoutEffect(function () {\n    if (visible) {\n      handleOnVisible();\n    } else {\n      handleOnHidden();\n    }\n  }, [visible, handleOnVisible, handleOnHidden]);\n  var colors = theme.colors,\n    roundness = theme.roundness,\n    isV3 = theme.isV3;\n  if (hidden) {\n    return null;\n  }\n  var _ref5 = action || {},\n    actionStyle = _ref5.style,\n    actionLabel = _ref5.label,\n    onPressAction = _ref5.onPress,\n    actionRippleColor = _ref5.rippleColor,\n    actionProps = _objectWithoutProperties(_ref5, _excluded2);\n  var buttonTextColor = isV3 ? colors.inversePrimary : colors.accent;\n  var textColor = isV3 ? colors.inverseOnSurface : colors === null || colors === void 0 ? void 0 : colors.surface;\n  var backgroundColor = isV3 ? colors.inverseSurface : colors === null || colors === void 0 ? void 0 : colors.onSurface;\n  var isIconButton = isV3 && onIconPress;\n  var marginLeft = action ? -12 : -16;\n  var wrapperPaddings = {\n    paddingBottom: bottom,\n    paddingHorizontal: Math.max(left, right)\n  };\n  var renderChildrenWithWrapper = function renderChildrenWithWrapper() {\n    if (typeof children === 'string') {\n      return React.createElement(Text, {\n        variant: \"bodyMedium\",\n        style: [styles.content, {\n          color: textColor\n        }]\n      }, children);\n    }\n    return React.createElement(View, {\n      style: styles.content\n    }, React.createElement(View, null, children));\n  };\n  return React.createElement(View, {\n    pointerEvents: \"box-none\",\n    style: [styles.wrapper, wrapperPaddings, wrapperStyle]\n  }, React.createElement(Surface, _extends({\n    pointerEvents: \"box-none\",\n    accessibilityLiveRegion: \"polite\",\n    theme: theme,\n    style: [!isV3 && styles.elevation, styles.container, {\n      backgroundColor: backgroundColor,\n      borderRadius: roundness,\n      opacity: opacity,\n      transform: [{\n        scale: visible ? opacity.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0.9, 1]\n        }) : 1\n      }]\n    }, style],\n    testID: testID\n  }, isV3 && {\n    elevation: elevation\n  }, rest), renderChildrenWithWrapper(), (action || isIconButton) && React.createElement(View, {\n    style: [styles.actionsContainer, {\n      marginLeft: marginLeft\n    }]\n  }, action ? React.createElement(Button, _extends({\n    onPress: function onPress(event) {\n      onPressAction === null || onPressAction === void 0 ? void 0 : onPressAction(event);\n      onDismiss();\n    },\n    style: [styles.button, actionStyle],\n    textColor: buttonTextColor,\n    compact: !isV3,\n    mode: \"text\",\n    theme: theme,\n    rippleColor: actionRippleColor\n  }, actionProps), actionLabel) : null, isIconButton ? React.createElement(IconButton, {\n    accessibilityRole: \"button\",\n    borderless: true,\n    onPress: onIconPress,\n    iconColor: theme.colors.inverseOnSurface,\n    rippleColor: rippleColor,\n    theme: theme,\n    icon: icon || function (_ref4) {\n      var size = _ref4.size,\n        color = _ref4.color;\n      return React.createElement(MaterialCommunityIcon, {\n        name: \"close\",\n        color: color,\n        size: size,\n        direction: I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'\n      });\n    },\n    accessibilityLabel: iconAccessibilityLabel,\n    style: styles.icon,\n    testID: `${testID}-icon`\n  }) : null)));\n};\nSnackbar.DURATION_SHORT = DURATION_SHORT;\nSnackbar.DURATION_MEDIUM = DURATION_MEDIUM;\nSnackbar.DURATION_LONG = DURATION_LONG;\nvar styles = StyleSheet.create({\n  wrapper: {\n    position: 'absolute',\n    bottom: 0,\n    width: '100%'\n  },\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    margin: 8,\n    borderRadius: 4,\n    minHeight: 48\n  },\n  content: {\n    marginHorizontal: 16,\n    marginVertical: 14,\n    flex: 1\n  },\n  actionsContainer: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n    minHeight: 48\n  },\n  button: {\n    marginRight: 8,\n    marginLeft: 4\n  },\n  elevation: {\n    elevation: 6\n  },\n  icon: {\n    width: 40,\n    height: 40,\n    margin: 0\n  }\n});\nexport default Snackbar;","map":{"version":3,"mappings":"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","names":["React","useSafeAreaInsets","useLatestCallback","useInternalTheme","Button","IconButton","MaterialCommunityIcon","Surface","Text","DURATION_SHORT","DURATION_MEDIUM","DURATION_LONG","Snackbar","_ref","visible","action","icon","onIconPress","iconAccessibilityLabel","duration","onDismiss","children","elevation","wrapperStyle","style","themeOverrides","theme","rippleColor","testID","rest","bottom","right","left","useRef","Animated","Value","opacity","current","hideTimeout","undefined","useState","hidden","setHidden","scale","animation","handleOnVisible","clearTimeout","timing","toValue","easing","Easing","out","ease","useNativeDriver","start","finished","_ref2","isInfinity","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","setTimeout","handleOnHidden","_ref3","useEffect","useLayoutEffect","colors","roundness","isV3","actionStyle","actionLabel","label","onPressAction","onPress","actionRippleColor","actionProps","buttonTextColor","inversePrimary","accent","textColor","inverseOnSurface","surface","backgroundColor","inverseSurface","onSurface","isIconButton","marginLeft","wrapperPaddings","paddingBottom","paddingHorizontal","Math","max","renderChildrenWithWrapper","variant","styles","content","color","View","pointerEvents","wrapper","accessibilityLiveRegion","container","borderRadius","transform","interpolate","inputRange","outputRange","actionsContainer","event","button","compact","mode","accessibilityRole","borderless","iconColor","size","_ref4","name","direction","I18nManager","getConstants","isRTL","accessibilityLabel","StyleSheet","create","position","width","flexDirection","justifyContent","margin","minHeight","marginHorizontal","marginVertical","flex","alignItems","marginRight","height"],"sources":["C:\\Users\\devandroid\\Desktop\\Lista-De-Tareas\\node_modules\\react-native-paper\\src\\components\\Snackbar.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  ColorValue,\n  Easing,\n  I18nManager,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport useLatestCallback from 'use-latest-callback';\n\nimport { useInternalTheme } from '../core/theming';\nimport type { $Omit, $RemoveChildren, ThemeProp } from '../types';\nimport Button from './Button/Button';\nimport type { IconSource } from './Icon';\nimport IconButton from './IconButton/IconButton';\nimport MaterialCommunityIcon from './MaterialCommunityIcon';\nimport Surface from './Surface';\nimport Text from './Typography/Text';\n\nexport type Props = $Omit<React.ComponentProps<typeof Surface>, 'mode'> & {\n  /**\n   * Whether the Snackbar is currently visible.\n   */\n  visible: boolean;\n  /**\n   * Label and press callback for the action button. It should contain the following properties:\n   * - `label` - Label of the action button\n   * - `onPress` - Callback that is called when action button is pressed.\n   */\n  action?: $RemoveChildren<typeof Button> & {\n    label: string;\n  };\n  /**\n   * @supported Available in v5.x with theme version 3\n   * Icon to display when `onIconPress` is defined. Default will be `close` icon.\n   */\n  icon?: IconSource;\n  /**\n   * @supported Available in v5.x with theme version 3\n   * Color of the ripple effect.\n   */\n  rippleColor?: ColorValue;\n  /**\n   * @supported Available in v5.x with theme version 3\n   * Function to execute on icon button press. The icon button appears only when this prop is specified.\n   */\n  onIconPress?: () => void;\n  /**\n   * @supported Available in v5.x with theme version 3\n   * Accessibility label for the icon button. This is read by the screen reader when the user taps the button.\n   */\n  iconAccessibilityLabel?: string;\n  /**\n   * The duration for which the Snackbar is shown.\n   */\n  duration?: number;\n  /**\n   * Callback called when Snackbar is dismissed. The `visible` prop needs to be updated when this is called.\n   */\n  onDismiss: () => void;\n  /**\n   * Text content of the Snackbar.\n   */\n  children: React.ReactNode;\n  /**\n   * @supported Available in v5.x with theme version 3\n   * Changes Snackbar shadow and background on iOS and Android.\n   */\n  elevation?: 0 | 1 | 2 | 3 | 4 | 5 | Animated.Value;\n  /**\n   * Style for the wrapper of the snackbar\n   */\n  wrapperStyle?: StyleProp<ViewStyle>;\n  style?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n  ref?: React.RefObject<View>;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n  /**\n   * TestID used for testing purposes\n   */\n  testID?: string;\n};\n\nconst DURATION_SHORT = 4000;\nconst DURATION_MEDIUM = 7000;\nconst DURATION_LONG = 10000;\n\n/**\n * Snackbars provide brief feedback about an operation through a message rendered at the bottom of the container in which it's wrapped.\n *\n * Note: To display it as a popup, regardless of the parent's position, wrap it with a `Portal` component – refer to the example in the \"More Examples` section.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View, StyleSheet } from 'react-native';\n * import { Button, Snackbar } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [visible, setVisible] = React.useState(false);\n *\n *   const onToggleSnackBar = () => setVisible(!visible);\n *\n *   const onDismissSnackBar = () => setVisible(false);\n *\n *   return (\n *     <View style={styles.container}>\n *       <Button onPress={onToggleSnackBar}>{visible ? 'Hide' : 'Show'}</Button>\n *       <Snackbar\n *         visible={visible}\n *         onDismiss={onDismissSnackBar}\n *         action={{\n *           label: 'Undo',\n *           onPress: () => {\n *             // Do something\n *           },\n *         }}>\n *         Hey there! I'm a Snackbar.\n *       </Snackbar>\n *     </View>\n *   );\n * };\n *\n * const styles = StyleSheet.create({\n *   container: {\n *     flex: 1,\n *     justifyContent: 'space-between',\n *   },\n * });\n *\n * export default MyComponent;\n * ```\n */\nconst Snackbar = ({\n  visible,\n  action,\n  icon,\n  onIconPress,\n  iconAccessibilityLabel = 'Close icon',\n  duration = DURATION_MEDIUM,\n  onDismiss,\n  children,\n  elevation = 2,\n  wrapperStyle,\n  style,\n  theme: themeOverrides,\n  rippleColor,\n  testID,\n  ...rest\n}: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n  const { bottom, right, left } = useSafeAreaInsets();\n\n  const { current: opacity } = React.useRef<Animated.Value>(\n    new Animated.Value(0.0)\n  );\n  const hideTimeout = React.useRef<NodeJS.Timeout | undefined>(undefined);\n\n  const [hidden, setHidden] = React.useState(!visible);\n\n  const { scale } = theme.animation;\n\n  const handleOnVisible = useLatestCallback(() => {\n    // show\n    if (hideTimeout.current) clearTimeout(hideTimeout.current);\n    setHidden(false);\n    Animated.timing(opacity, {\n      toValue: 1,\n      duration: 200 * scale,\n      easing: Easing.out(Easing.ease),\n      useNativeDriver: true,\n    }).start(({ finished }) => {\n      if (finished) {\n        const isInfinity =\n          duration === Number.POSITIVE_INFINITY ||\n          duration === Number.NEGATIVE_INFINITY;\n\n        if (!isInfinity) {\n          hideTimeout.current = setTimeout(\n            onDismiss,\n            duration\n          ) as unknown as NodeJS.Timeout;\n        }\n      }\n    });\n  });\n\n  const handleOnHidden = useLatestCallback(() => {\n    // hide\n    if (hideTimeout.current) {\n      clearTimeout(hideTimeout.current);\n    }\n\n    Animated.timing(opacity, {\n      toValue: 0,\n      duration: 100 * scale,\n      useNativeDriver: true,\n    }).start(({ finished }) => {\n      if (finished) {\n        setHidden(true);\n      }\n    });\n  });\n\n  React.useEffect(() => {\n    return () => {\n      if (hideTimeout.current) clearTimeout(hideTimeout.current);\n    };\n  }, []);\n\n  React.useLayoutEffect(() => {\n    if (visible) {\n      handleOnVisible();\n    } else {\n      handleOnHidden();\n    }\n  }, [visible, handleOnVisible, handleOnHidden]);\n\n  const { colors, roundness, isV3 } = theme;\n\n  if (hidden) {\n    return null;\n  }\n\n  const {\n    style: actionStyle,\n    label: actionLabel,\n    onPress: onPressAction,\n    rippleColor: actionRippleColor,\n    ...actionProps\n  } = action || {};\n\n  const buttonTextColor = isV3 ? colors.inversePrimary : colors.accent;\n  const textColor = isV3 ? colors.inverseOnSurface : colors?.surface;\n  const backgroundColor = isV3 ? colors.inverseSurface : colors?.onSurface;\n\n  const isIconButton = isV3 && onIconPress;\n\n  const marginLeft = action ? -12 : -16;\n\n  const wrapperPaddings = {\n    paddingBottom: bottom,\n    paddingHorizontal: Math.max(left, right),\n  };\n\n  const renderChildrenWithWrapper = () => {\n    if (typeof children === 'string') {\n      return (\n        <Text\n          variant=\"bodyMedium\"\n          style={[styles.content, { color: textColor }]}\n        >\n          {children}\n        </Text>\n      );\n    }\n\n    return (\n      <View style={styles.content}>\n        {/* View is added to allow multiple lines support for Text component as children */}\n        <View>{children}</View>\n      </View>\n    );\n  };\n\n  return (\n    <View\n      pointerEvents=\"box-none\"\n      style={[styles.wrapper, wrapperPaddings, wrapperStyle]}\n    >\n      <Surface\n        pointerEvents=\"box-none\"\n        accessibilityLiveRegion=\"polite\"\n        theme={theme}\n        style={[\n          !isV3 && styles.elevation,\n          styles.container,\n          {\n            backgroundColor,\n            borderRadius: roundness,\n            opacity: opacity,\n            transform: [\n              {\n                scale: visible\n                  ? opacity.interpolate({\n                      inputRange: [0, 1],\n                      outputRange: [0.9, 1],\n                    })\n                  : 1,\n              },\n            ],\n          },\n          style,\n        ]}\n        testID={testID}\n        {...(isV3 && { elevation })}\n        {...rest}\n      >\n        {renderChildrenWithWrapper()}\n        {(action || isIconButton) && (\n          <View style={[styles.actionsContainer, { marginLeft }]}>\n            {action ? (\n              <Button\n                onPress={(event) => {\n                  onPressAction?.(event);\n                  onDismiss();\n                }}\n                style={[styles.button, actionStyle]}\n                textColor={buttonTextColor}\n                compact={!isV3}\n                mode=\"text\"\n                theme={theme}\n                rippleColor={actionRippleColor}\n                {...actionProps}\n              >\n                {actionLabel}\n              </Button>\n            ) : null}\n            {isIconButton ? (\n              <IconButton\n                accessibilityRole=\"button\"\n                borderless\n                onPress={onIconPress}\n                iconColor={theme.colors.inverseOnSurface}\n                rippleColor={rippleColor}\n                theme={theme}\n                icon={\n                  icon ||\n                  (({ size, color }) => {\n                    return (\n                      <MaterialCommunityIcon\n                        name=\"close\"\n                        color={color}\n                        size={size}\n                        direction={\n                          I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'\n                        }\n                      />\n                    );\n                  })\n                }\n                accessibilityLabel={iconAccessibilityLabel}\n                style={styles.icon}\n                testID={`${testID}-icon`}\n              />\n            ) : null}\n          </View>\n        )}\n      </Surface>\n    </View>\n  );\n};\n\n/**\n * Show the Snackbar for a short duration.\n */\nSnackbar.DURATION_SHORT = DURATION_SHORT;\n\n/**\n * Show the Snackbar for a medium duration.\n */\nSnackbar.DURATION_MEDIUM = DURATION_MEDIUM;\n\n/**\n * Show the Snackbar for a long duration.\n */\nSnackbar.DURATION_LONG = DURATION_LONG;\n\nconst styles = StyleSheet.create({\n  wrapper: {\n    position: 'absolute',\n    bottom: 0,\n    width: '100%',\n  },\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    margin: 8,\n    borderRadius: 4,\n    minHeight: 48,\n  },\n  content: {\n    marginHorizontal: 16,\n    marginVertical: 14,\n    flex: 1,\n  },\n  actionsContainer: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n    minHeight: 48,\n  },\n  button: {\n    marginRight: 8,\n    marginLeft: 4,\n  },\n  elevation: {\n    elevation: 6,\n  },\n  icon: {\n    width: 40,\n    height: 40,\n    margin: 0,\n  },\n});\n\nexport default Snackbar;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}