{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nvar App = function App() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    tasks = _useState2[0],\n    setTasks = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    modalVisible = _useState4[0],\n    setModalVisible = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    taskName = _useState6[0],\n    setTaskName = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    taskDescription = _useState8[0],\n    setTaskDescription = _useState8[1];\n  var loadTasks = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        var storedTasks = yield AsyncStorage.getItem('tasks');\n        if (storedTasks !== null) {\n          setTasks(JSON.parse(storedTasks));\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    });\n    return function loadTasks() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var saveTasks = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        yield AsyncStorage.setItem('tasks', JSON.stringify(tasks));\n      } catch (error) {\n        console.error(error);\n      }\n    });\n    return function saveTasks() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    loadTasks();\n  }, []);\n  useEffect(function () {\n    saveTasks();\n  }, [tasks]);\n  var addTask = function addTask() {\n    if (taskName) {\n      setTasks([].concat(_toConsumableArray(tasks), [{\n        name: taskName,\n        description: taskDescription,\n        completed: false\n      }]));\n      setTaskName('');\n      setTaskDescription('');\n      setModalVisible(false);\n    }\n  };\n  var markTaskAsCompleted = function markTaskAsCompleted(index) {\n    var updatedTasks = _toConsumableArray(tasks);\n    updatedTasks[index].completed = !updatedTasks[index].completed;\n    setTasks(updatedTasks);\n  };\n  var deleteTask = function deleteTask(index) {\n    var updatedTasks = _toConsumableArray(tasks);\n    updatedTasks.splice(index, 1);\n    setTasks(updatedTasks);\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.header,\n      children: \"Lista de Tareas\"\n    }), _jsx(Button, {\n      title: \"Agregar Tarea\",\n      onPress: function onPress() {\n        return setModalVisible(true);\n      }\n    }), _jsx(FlatList, {\n      data: tasks,\n      renderItem: function renderItem(_ref3) {\n        var item = _ref3.item,\n          index = _ref3.index;\n        return _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return markTaskAsCompleted(index);\n          },\n          onLongPress: function onLongPress() {\n            return deleteTask(index);\n          },\n          children: _jsxs(View, {\n            style: styles.task,\n            children: [_jsx(Text, {\n              style: item.completed ? styles.completedTask : styles.taskText,\n              children: item.name\n            }), _jsx(Text, {\n              style: styles.taskDescription,\n              children: item.description\n            })]\n          })\n        });\n      },\n      keyExtractor: function keyExtractor(item, index) {\n        return index.toString();\n      }\n    }), _jsx(Modal, {\n      visible: modalVisible,\n      animationType: \"slide\",\n      children: _jsxs(View, {\n        style: styles.modalContainer,\n        children: [_jsx(TextInput, {\n          placeholder: \"Nombre de la tarea\",\n          value: taskName,\n          onChangeText: function onChangeText(text) {\n            return setTaskName(text);\n          },\n          style: styles.input\n        }), _jsx(TextInput, {\n          placeholder: \"Descripci\\xF3n de la tarea\",\n          value: taskDescription,\n          onChangeText: function onChangeText(text) {\n            return setTaskDescription(text);\n          },\n          style: styles.input\n        }), _jsx(Button, {\n          title: \"Agregar\",\n          onPress: addTask\n        }), _jsx(Button, {\n          title: \"Cancelar\",\n          onPress: function onPress() {\n            return setModalVisible(false);\n          }\n        })]\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16\n  },\n  header: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 16\n  },\n  task: {\n    backgroundColor: 'white',\n    padding: 16,\n    marginBottom: 8,\n    borderWidth: 1,\n    borderColor: '#ddd'\n  },\n  completedTask: {\n    textDecorationLine: 'line-through'\n  },\n  taskText: {\n    fontSize: 18\n  },\n  taskDescription: {\n    fontSize: 14,\n    color: '#777'\n  },\n  modalContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  input: {\n    borderBottomWidth: 1,\n    borderColor: 'gray',\n    marginBottom: 16,\n    fontSize: 16,\n    width: '80%'\n  }\n});\nvar ToDoAppScreen = function ToDoAppScreen() {\n  return _jsx(NavigationContainer, {\n    children: _jsx(Stack.Navigator, {\n      children: _jsx(Stack.Screen, {\n        name: \"Tareas Pendientes\",\n        component: App\n      })\n    })\n  });\n};\nexport default ToDoAppScreen;","map":{"version":3,"names":["React","useState","useEffect","AsyncStorage","NavigationContainer","createNativeStackNavigator","Stack","App","tasks","setTasks","modalVisible","setModalVisible","taskName","setTaskName","taskDescription","setTaskDescription","loadTasks","storedTasks","getItem","JSON","parse","error","console","saveTasks","setItem","stringify","addTask","name","description","completed","markTaskAsCompleted","index","updatedTasks","deleteTask","splice","styles","container","header","item","task","completedTask","taskText","toString","modalContainer","text","input","StyleSheet","create","flex","padding","fontSize","fontWeight","marginBottom","backgroundColor","borderWidth","borderColor","textDecorationLine","color","justifyContent","alignItems","borderBottomWidth","width","ToDoAppScreen"],"sources":["C:/Users/devandroid/Downloads/Lista-De-Tareas/Componentes/Aplicacion.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  Button,\r\n  Modal,\r\n  TextInput,\r\n  FlatList,\r\n  TouchableOpacity,\r\n  StyleSheet,\r\n} from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\n\r\nconst Stack = createNativeStackNavigator();\r\n\r\nconst App = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [taskName, setTaskName] = useState('');\r\n  const [taskDescription, setTaskDescription] = useState('');\r\n\r\n  const loadTasks = async () => {\r\n    try {\r\n      const storedTasks = await AsyncStorage.getItem('tasks');\r\n      if (storedTasks !== null) {\r\n        setTasks(JSON.parse(storedTasks));\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const saveTasks = async () => {\r\n    try {\r\n      await AsyncStorage.setItem('tasks', JSON.stringify(tasks));\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadTasks();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    saveTasks();\r\n  }, [tasks]);\r\n\r\n  const addTask = () => {\r\n    if (taskName) {\r\n      setTasks([...tasks, { name: taskName, description: taskDescription, completed: false }]);\r\n      setTaskName('');\r\n      setTaskDescription('');\r\n      setModalVisible(false);\r\n    }\r\n  };\r\n\r\n  const markTaskAsCompleted = (index) => {\r\n    const updatedTasks = [...tasks];\r\n    updatedTasks[index].completed = !updatedTasks[index].completed;\r\n    setTasks(updatedTasks);\r\n  };\r\n\r\n  const deleteTask = (index) => {\r\n    const updatedTasks = [...tasks];\r\n    updatedTasks.splice(index, 1);\r\n    setTasks(updatedTasks);\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.header}>Lista de Tareas</Text>\r\n      <Button title=\"Agregar Tarea\" onPress={() => setModalVisible(true)} />\r\n      <FlatList\r\n        data={tasks}\r\n        renderItem={({ item, index }) => (\r\n          <TouchableOpacity\r\n            onPress={() => markTaskAsCompleted(index)}\r\n            onLongPress={() => deleteTask(index)}\r\n          >\r\n            <View style={styles.task}>\r\n              <Text style={item.completed ? styles.completedTask : styles.taskText}>{item.name}</Text>\r\n              <Text style={styles.taskDescription}>{item.description}</Text>\r\n            </View>\r\n          </TouchableOpacity>\r\n        )}\r\n        keyExtractor={(item, index) => index.toString()}\r\n      />\r\n      <Modal visible={modalVisible} animationType=\"slide\">\r\n        <View style={styles.modalContainer}>\r\n          <TextInput\r\n            placeholder=\"Nombre de la tarea\"\r\n            value={taskName}\r\n            onChangeText={(text) => setTaskName(text)}\r\n            style={styles.input}\r\n          />\r\n          <TextInput\r\n            placeholder=\"Descripción de la tarea\"\r\n            value={taskDescription}\r\n            onChangeText={(text) => setTaskDescription(text)}\r\n            style={styles.input}\r\n          />\r\n          <Button title=\"Agregar\" onPress={addTask} />\r\n          <Button title=\"Cancelar\" onPress={() => setModalVisible(false)} />\r\n        </View>\r\n      </Modal>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 16,\r\n  },\r\n  header: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    marginBottom: 16,\r\n  },\r\n  task: {\r\n    backgroundColor: 'white',\r\n    padding: 16,\r\n    marginBottom: 8,\r\n    borderWidth: 1,\r\n    borderColor: '#ddd',\r\n  },\r\n  completedTask: {\r\n    textDecorationLine: 'line-through',\r\n  },\r\n  taskText: {\r\n    fontSize: 18,\r\n  },\r\n  taskDescription: {\r\n    fontSize: 14,\r\n    color: '#777',\r\n  },\r\n  modalContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  input: {\r\n    borderBottomWidth: 1,\r\n    borderColor: 'gray',\r\n    marginBottom: 16,\r\n    fontSize: 16,\r\n    width: '80%',\r\n  },\r\n});\r\n\r\nconst ToDoAppScreen = () => {\r\n  return (\r\n    <NavigationContainer>\r\n      <Stack.Navigator>\r\n        <Stack.Screen name=\"Tareas Pendientes\" component={App} />\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n};\r\n\r\nexport default ToDoAppScreen;\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWnD,OAAOC,YAAY,MAAM,2CAA2C;AACpE,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,0BAA0B,QAAQ,gCAAgC;AAAC;AAAA;AAE5E,IAAMC,KAAK,GAAGD,0BAA0B,EAAE;AAE1C,IAAME,GAAG,GAAG,SAANA,GAAG,GAAS;EAChB,gBAA0BN,QAAQ,CAAC,EAAE,CAAC;IAAA;IAA/BO,KAAK;IAAEC,QAAQ;EACtB,iBAAwCR,QAAQ,CAAC,KAAK,CAAC;IAAA;IAAhDS,YAAY;IAAEC,eAAe;EACpC,iBAAgCV,QAAQ,CAAC,EAAE,CAAC;IAAA;IAArCW,QAAQ;IAAEC,WAAW;EAC5B,iBAA8CZ,QAAQ,CAAC,EAAE,CAAC;IAAA;IAAnDa,eAAe;IAAEC,kBAAkB;EAE1C,IAAMC,SAAS;IAAA,6BAAG,aAAY;MAC5B,IAAI;QACF,IAAMC,WAAW,SAASd,YAAY,CAACe,OAAO,CAAC,OAAO,CAAC;QACvD,IAAID,WAAW,KAAK,IAAI,EAAE;UACxBR,QAAQ,CAACU,IAAI,CAACC,KAAK,CAACH,WAAW,CAAC,CAAC;QACnC;MACF,CAAC,CAAC,OAAOI,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC;IAAA,gBATKL,SAAS;MAAA;IAAA;EAAA,GASd;EAED,IAAMO,SAAS;IAAA,8BAAG,aAAY;MAC5B,IAAI;QACF,MAAMpB,YAAY,CAACqB,OAAO,CAAC,OAAO,EAAEL,IAAI,CAACM,SAAS,CAACjB,KAAK,CAAC,CAAC;MAC5D,CAAC,CAAC,OAAOa,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC;IAAA,gBANKE,SAAS;MAAA;IAAA;EAAA,GAMd;EAEDrB,SAAS,CAAC,YAAM;IACdc,SAAS,EAAE;EACb,CAAC,EAAE,EAAE,CAAC;EAENd,SAAS,CAAC,YAAM;IACdqB,SAAS,EAAE;EACb,CAAC,EAAE,CAACf,KAAK,CAAC,CAAC;EAEX,IAAMkB,OAAO,GAAG,SAAVA,OAAO,GAAS;IACpB,IAAId,QAAQ,EAAE;MACZH,QAAQ,8BAAKD,KAAK,IAAE;QAAEmB,IAAI,EAAEf,QAAQ;QAAEgB,WAAW,EAAEd,eAAe;QAAEe,SAAS,EAAE;MAAM,CAAC,GAAE;MACxFhB,WAAW,CAAC,EAAE,CAAC;MACfE,kBAAkB,CAAC,EAAE,CAAC;MACtBJ,eAAe,CAAC,KAAK,CAAC;IACxB;EACF,CAAC;EAED,IAAMmB,mBAAmB,GAAG,SAAtBA,mBAAmB,CAAIC,KAAK,EAAK;IACrC,IAAMC,YAAY,sBAAOxB,KAAK,CAAC;IAC/BwB,YAAY,CAACD,KAAK,CAAC,CAACF,SAAS,GAAG,CAACG,YAAY,CAACD,KAAK,CAAC,CAACF,SAAS;IAC9DpB,QAAQ,CAACuB,YAAY,CAAC;EACxB,CAAC;EAED,IAAMC,UAAU,GAAG,SAAbA,UAAU,CAAIF,KAAK,EAAK;IAC5B,IAAMC,YAAY,sBAAOxB,KAAK,CAAC;IAC/BwB,YAAY,CAACE,MAAM,CAACH,KAAK,EAAE,CAAC,CAAC;IAC7BtB,QAAQ,CAACuB,YAAY,CAAC;EACxB,CAAC;EAED,OACE,MAAC,IAAI;IAAC,KAAK,EAAEG,MAAM,CAACC,SAAU;IAAA,WAC5B,KAAC,IAAI;MAAC,KAAK,EAAED,MAAM,CAACE,MAAO;MAAA,UAAC;IAAe,EAAO,EAClD,KAAC,MAAM;MAAC,KAAK,EAAC,eAAe;MAAC,OAAO,EAAE;QAAA,OAAM1B,eAAe,CAAC,IAAI,CAAC;MAAA;IAAC,EAAG,EACtE,KAAC,QAAQ;MACP,IAAI,EAAEH,KAAM;MACZ,UAAU,EAAE;QAAA,IAAG8B,IAAI,SAAJA,IAAI;UAAEP,KAAK,SAALA,KAAK;QAAA,OACxB,KAAC,gBAAgB;UACf,OAAO,EAAE;YAAA,OAAMD,mBAAmB,CAACC,KAAK,CAAC;UAAA,CAAC;UAC1C,WAAW,EAAE;YAAA,OAAME,UAAU,CAACF,KAAK,CAAC;UAAA,CAAC;UAAA,UAErC,MAAC,IAAI;YAAC,KAAK,EAAEI,MAAM,CAACI,IAAK;YAAA,WACvB,KAAC,IAAI;cAAC,KAAK,EAAED,IAAI,CAACT,SAAS,GAAGM,MAAM,CAACK,aAAa,GAAGL,MAAM,CAACM,QAAS;cAAA,UAAEH,IAAI,CAACX;YAAI,EAAQ,EACxF,KAAC,IAAI;cAAC,KAAK,EAAEQ,MAAM,CAACrB,eAAgB;cAAA,UAAEwB,IAAI,CAACV;YAAW,EAAQ;UAAA;QACzD,EACU;MAAA,CACnB;MACF,YAAY,EAAE,sBAACU,IAAI,EAAEP,KAAK;QAAA,OAAKA,KAAK,CAACW,QAAQ,EAAE;MAAA;IAAC,EAChD,EACF,KAAC,KAAK;MAAC,OAAO,EAAEhC,YAAa;MAAC,aAAa,EAAC,OAAO;MAAA,UACjD,MAAC,IAAI;QAAC,KAAK,EAAEyB,MAAM,CAACQ,cAAe;QAAA,WACjC,KAAC,SAAS;UACR,WAAW,EAAC,oBAAoB;UAChC,KAAK,EAAE/B,QAAS;UAChB,YAAY,EAAE,sBAACgC,IAAI;YAAA,OAAK/B,WAAW,CAAC+B,IAAI,CAAC;UAAA,CAAC;UAC1C,KAAK,EAAET,MAAM,CAACU;QAAM,EACpB,EACF,KAAC,SAAS;UACR,WAAW,EAAC,4BAAyB;UACrC,KAAK,EAAE/B,eAAgB;UACvB,YAAY,EAAE,sBAAC8B,IAAI;YAAA,OAAK7B,kBAAkB,CAAC6B,IAAI,CAAC;UAAA,CAAC;UACjD,KAAK,EAAET,MAAM,CAACU;QAAM,EACpB,EACF,KAAC,MAAM;UAAC,KAAK,EAAC,SAAS;UAAC,OAAO,EAAEnB;QAAQ,EAAG,EAC5C,KAAC,MAAM;UAAC,KAAK,EAAC,UAAU;UAAC,OAAO,EAAE;YAAA,OAAMf,eAAe,CAAC,KAAK,CAAC;UAAA;QAAC,EAAG;MAAA;IAC7D,EACD;EAAA,EACH;AAEX,CAAC;AAED,IAAMwB,MAAM,GAAGW,UAAU,CAACC,MAAM,CAAC;EAC/BX,SAAS,EAAE;IACTY,IAAI,EAAE,CAAC;IACPC,OAAO,EAAE;EACX,CAAC;EACDZ,MAAM,EAAE;IACNa,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBC,YAAY,EAAE;EAChB,CAAC;EACDb,IAAI,EAAE;IACJc,eAAe,EAAE,OAAO;IACxBJ,OAAO,EAAE,EAAE;IACXG,YAAY,EAAE,CAAC;IACfE,WAAW,EAAE,CAAC;IACdC,WAAW,EAAE;EACf,CAAC;EACDf,aAAa,EAAE;IACbgB,kBAAkB,EAAE;EACtB,CAAC;EACDf,QAAQ,EAAE;IACRS,QAAQ,EAAE;EACZ,CAAC;EACDpC,eAAe,EAAE;IACfoC,QAAQ,EAAE,EAAE;IACZO,KAAK,EAAE;EACT,CAAC;EACDd,cAAc,EAAE;IACdK,IAAI,EAAE,CAAC;IACPU,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE;EACd,CAAC;EACDd,KAAK,EAAE;IACLe,iBAAiB,EAAE,CAAC;IACpBL,WAAW,EAAE,MAAM;IACnBH,YAAY,EAAE,EAAE;IAChBF,QAAQ,EAAE,EAAE;IACZW,KAAK,EAAE;EACT;AACF,CAAC,CAAC;AAEF,IAAMC,aAAa,GAAG,SAAhBA,aAAa,GAAS;EAC1B,OACE,KAAC,mBAAmB;IAAA,UAClB,KAAC,KAAK,CAAC,SAAS;MAAA,UACd,KAAC,KAAK,CAAC,MAAM;QAAC,IAAI,EAAC,mBAAmB;QAAC,SAAS,EAAEvD;MAAI;IAAG;EACzC,EACE;AAE1B,CAAC;AAED,eAAeuD,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}