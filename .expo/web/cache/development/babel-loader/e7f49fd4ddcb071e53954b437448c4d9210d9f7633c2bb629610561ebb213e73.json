{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Item = function Item(_ref) {\n  var item = _ref.item,\n    markTaskAsCompleted = _ref.markTaskAsCompleted,\n    deleteTask = _ref.deleteTask;\n  return _jsxs(View, {\n    style: styles.itemContainer,\n    children: [_jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return markTaskAsCompleted(item.id);\n      },\n      children: _jsx(Text, {\n        style: item.completed ? styles.completedTaskName : styles.taskName,\n        children: item.name\n      })\n    }), _jsx(Text, {\n      style: styles.taskDescription,\n      children: item.description\n    }), _jsx(TouchableOpacity, {\n      style: styles.deleteButton,\n      onPress: function onPress() {\n        return deleteTask(item.id);\n      },\n      children: _jsx(Text, {\n        style: styles.deleteButtonText,\n        children: \"Eliminar\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  itemContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    borderBottomWidth: 1,\n    borderBottomColor: 'gray',\n    backgroundColor: '#f3f0cd',\n    borderRadius: 10,\n    padding: 10,\n    marginBottom: 10\n  },\n  taskName: {\n    fontSize: 22,\n    flex: 1\n  },\n  completedTaskName: {\n    textDecorationLine: 'line-through',\n    fontWeight: 'bold',\n    color: 'gray'\n  },\n  deleteButton: {\n    marginLeft: 10,\n    backgroundColor: 'red',\n    padding: 5,\n    borderRadius: 5\n  },\n  deleteButtonText: {\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold'\n  },\n  taskDescription: {\n    fontSize: 18,\n    color: 'gray',\n    marginTop: 5\n  }\n});\nexport default Item;","map":{"version":3,"names":["React","Item","item","markTaskAsCompleted","deleteTask","styles","itemContainer","id","completed","completedTaskName","taskName","name","taskDescription","description","deleteButton","deleteButtonText","StyleSheet","create","flexDirection","alignItems","borderBottomWidth","borderBottomColor","backgroundColor","borderRadius","padding","marginBottom","fontSize","flex","textDecorationLine","fontWeight","color","marginLeft","textAlign","marginTop"],"sources":["C:/Users/devandroid/Desktop/Nueva carpeta/Lista-De-Tareas/Componentes/TaskItem.jsx"],"sourcesContent":["import React from 'react';\r\nimport { View, Text, TouchableOpacity, StyleSheet } from 'react-native';\r\n\r\nconst Item = ({ item, markTaskAsCompleted, deleteTask }) => {\r\n  return (\r\n    <View style={styles.itemContainer}>\r\n      <TouchableOpacity onPress={() => markTaskAsCompleted(item.id)}>\r\n        <Text style={item.completed ? styles.completedTaskName : styles.taskName}>\r\n          {item.name}\r\n        </Text>\r\n      </TouchableOpacity>\r\n      <Text style={styles.taskDescription}>{item.description}</Text>\r\n      <TouchableOpacity style={styles.deleteButton} onPress={() => deleteTask(item.id)}>\r\n        <Text style={styles.deleteButtonText}>Eliminar</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  itemContainer: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: 'gray',\r\n    backgroundColor: '#f3f0cd',\r\n    borderRadius: 10,\r\n    padding: 10,\r\n    marginBottom: 10,\r\n  },\r\n  taskName: {\r\n    fontSize: 22,\r\n    flex: 1,\r\n  },\r\n  completedTaskName: {\r\n    textDecorationLine: 'line-through',\r\n    fontWeight: 'bold',\r\n    color: 'gray',\r\n  },\r\n  deleteButton: {\r\n    marginLeft: 10,\r\n    backgroundColor: 'red',\r\n    padding: 5,\r\n    borderRadius: 5,\r\n  },\r\n  deleteButtonText: {\r\n    color: 'white',\r\n    textAlign: 'center',\r\n    fontWeight: 'bold',\r\n  },\r\n  taskDescription: {\r\n    fontSize: 18,\r\n    color: 'gray',\r\n    marginTop: 5,\r\n  },\r\n});\r\n\r\nexport default Item;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAG1B,IAAMC,IAAI,GAAG,SAAPA,IAAI,OAAkD;EAAA,IAA5CC,IAAI,QAAJA,IAAI;IAAEC,mBAAmB,QAAnBA,mBAAmB;IAAEC,UAAU,QAAVA,UAAU;EACnD,OACE,MAAC,IAAI;IAAC,KAAK,EAAEC,MAAM,CAACC,aAAc;IAAA,WAChC,KAAC,gBAAgB;MAAC,OAAO,EAAE;QAAA,OAAMH,mBAAmB,CAACD,IAAI,CAACK,EAAE,CAAC;MAAA,CAAC;MAAA,UAC5D,KAAC,IAAI;QAAC,KAAK,EAAEL,IAAI,CAACM,SAAS,GAAGH,MAAM,CAACI,iBAAiB,GAAGJ,MAAM,CAACK,QAAS;QAAA,UACtER,IAAI,CAACS;MAAI;IACL,EACU,EACnB,KAAC,IAAI;MAAC,KAAK,EAAEN,MAAM,CAACO,eAAgB;MAAA,UAAEV,IAAI,CAACW;IAAW,EAAQ,EAC9D,KAAC,gBAAgB;MAAC,KAAK,EAAER,MAAM,CAACS,YAAa;MAAC,OAAO,EAAE;QAAA,OAAMV,UAAU,CAACF,IAAI,CAACK,EAAE,CAAC;MAAA,CAAC;MAAA,UAC/E,KAAC,IAAI;QAAC,KAAK,EAAEF,MAAM,CAACU,gBAAiB;QAAA,UAAC;MAAQ;IAAO,EACpC;EAAA,EACd;AAEX,CAAC;AAED,IAAMV,MAAM,GAAGW,UAAU,CAACC,MAAM,CAAC;EAC/BX,aAAa,EAAE;IACbY,aAAa,EAAE,KAAK;IACpBC,UAAU,EAAE,QAAQ;IACpBC,iBAAiB,EAAE,CAAC;IACpBC,iBAAiB,EAAE,MAAM;IACzBC,eAAe,EAAE,SAAS;IAC1BC,YAAY,EAAE,EAAE;IAChBC,OAAO,EAAE,EAAE;IACXC,YAAY,EAAE;EAChB,CAAC;EACDf,QAAQ,EAAE;IACRgB,QAAQ,EAAE,EAAE;IACZC,IAAI,EAAE;EACR,CAAC;EACDlB,iBAAiB,EAAE;IACjBmB,kBAAkB,EAAE,cAAc;IAClCC,UAAU,EAAE,MAAM;IAClBC,KAAK,EAAE;EACT,CAAC;EACDhB,YAAY,EAAE;IACZiB,UAAU,EAAE,EAAE;IACdT,eAAe,EAAE,KAAK;IACtBE,OAAO,EAAE,CAAC;IACVD,YAAY,EAAE;EAChB,CAAC;EACDR,gBAAgB,EAAE;IAChBe,KAAK,EAAE,OAAO;IACdE,SAAS,EAAE,QAAQ;IACnBH,UAAU,EAAE;EACd,CAAC;EACDjB,eAAe,EAAE;IACfc,QAAQ,EAAE,EAAE;IACZI,KAAK,EAAE,MAAM;IACbG,SAAS,EAAE;EACb;AACF,CAAC,CAAC;AAEF,eAAehC,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}